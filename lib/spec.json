{
    "openapi": "3.0.0",
    "servers": [
        {
            "url": "https://acm-pca.amazonaws.com/"
        },
        {
            "url": "http://acm-pca.amazonaws.com/"
        }
    ],
    "x-hasEquivalentPaths": true,
    "info": {
        "contact": {
            "email": "mike.ralphson@gmail.com",
            "name": "Mike Ralphson",
            "url": "https://github.com/mermade/aws2openapi",
            "x-twitter": "PermittedSoc"
        },
        "description": "<p>You can use the ACM PCA API to create a private certificate authority (CA). You must first call the <a>CreateCertificateAuthority</a> operation. If successful, the operation returns an Amazon Resource Name (ARN) for your private CA. Use this ARN as input to the <a>GetCertificateAuthorityCsr</a> operation to retrieve the certificate signing request (CSR) for your private CA certificate. Sign the CSR using the root or an intermediate CA in your on-premises PKI hierarchy, and call the <a>ImportCertificateAuthorityCertificate</a> to import your signed private CA certificate into ACM PCA. </p> <p>Use your private CA to issue and revoke certificates. These are private certificates that identify and secure client computers, servers, applications, services, devices, and users over SSLS/TLS connections within your organization. Call the <a>IssueCertificate</a> operation to issue a certificate. Call the <a>RevokeCertificate</a> operation to revoke a certificate. </p> <note> <p>Certificates issued by your private CA can be trusted only within your organization, not publicly.</p> </note> <p>Your private CA can optionally create a certificate revocation list (CRL) to track the certificates you revoke. To create a CRL, you must specify a <a>RevocationConfiguration</a> object when you call the <a>CreateCertificateAuthority</a> operation. ACM PCA writes the CRL to an S3 bucket that you specify. You must specify a bucket policy that grants ACM PCA write permission. </p> <p>You can also call the <a>CreateCertificateAuthorityAuditReport</a> to create an optional audit report, which enumerates all of the issued, valid, expired, and revoked certificates from the CA.</p> <note> <p>Each ACM PCA API operation has a throttling limit which determines the number of times the operation can be called per second. For more information, see <a href=\"acm-pca/latest/userguide/PcaLimits.html#PcaLimits-api\">API Rate Limits in ACM PCA</a> in the ACM PCA user guide.</p> </note>",
        "license": {
            "name": "Apache 2.0 License",
            "url": "http://www.apache.org/licenses/"
        },
        "termsOfService": "https://aws.amazon.com/service-terms/",
        "title": "AWS Certificate Manager Private Certificate Authority",
        "version": "2017-08-22",
        "x-apiClientRegistration": {
            "url": "https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct"
        },
        "x-apisguru-categories": [
            "cloud"
        ],
        "x-logo": {
            "backgroundColor": "#FFFFFF",
            "url": "https://api.apis.guru/v2/cache/logo/https_twitter.com_awscloud_profile_image.jpeg"
        },
        "x-origin": [
            {
                "contentType": "application/json",
                "converter": {
                    "url": "https://github.com/mermade/aws2openapi",
                    "version": "1.0.0"
                },
                "url": "https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/acm-pca-2017-08-22.normal.json",
                "x-apisguru-direct": true
            }
        ],
        "x-preferred": true,
        "x-providerName": "amazonaws.com",
        "x-release": "v4",
        "x-serviceName": "acm-pca"
    },
    "externalDocs": {
        "description": "Amazon Web Services documentation",
        "url": "https://aws.amazon.com/acm-pca/"
    },
    "security": [
        {
            "hmac": []
        }
    ],
    "paths": {
        "/": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Creates a private subordinate certificate authority (CA). You must specify the CA configuration, the revocation configuration, the CA type, and an optional idempotency token. The CA configuration specifies the name of the algorithm and key size to be used to create the CA private key, the type of signing algorithm that the CA uses to sign, and X.500 subject information. The CRL (certificate revocation list) configuration specifies the CRL expiration period in days (the validity period of the CRL), the Amazon S3 bucket that will contain the CRL, and a CNAME alias for the S3 bucket that is included in certificates issued by the CA. If successful, this operation returns the Amazon Resource Name (ARN) of the CA.",
                "operationId": "CreateCertificateAuthority",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "CertificateAuthorityArn": {
                                            "description": "<p>If successful, the Amazon Resource Name (ARN) of the certificate authority (CA). This is of the form: </p> <p> <code>arn:aws:acm-pca:<i>region</i>:<i>account</i>:certificate-authority/<i>12345678-1234-1234-1234-123456789012</i> </code>. </p>",
                                            "maxLength": 200,
                                            "minLength": 5,
                                            "pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:[\\w+=/,.@-]*:[0-9]+:[\\w+=,.@-]+(/[\\w+=/,.@-]+)*",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "InvalidArgsException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InvalidPolicyException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "InvalidTagException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "LimitExceededException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "CertificateAuthorityConfiguration": {
                                        "description": "Name and bit size of the private key algorithm, the name of the signing algorithm, and X.500 certificate subject information.",
                                        "properties": {
                                            "KeyAlgorithm": {
                                                "description": "Type of the public key algorithm and size, in bits, of the key pair that your key pair creates when it issues a certificate.",
                                                "enum": [
                                                    "RSA_2048",
                                                    "RSA_4096",
                                                    "EC_prime256v1",
                                                    "EC_secp384r1"
                                                ],
                                                "type": "string"
                                            },
                                            "SigningAlgorithm": {
                                                "description": "Name of the algorithm your private CA uses to sign certificate requests.",
                                                "enum": [
                                                    "SHA256WITHECDSA",
                                                    "SHA384WITHECDSA",
                                                    "SHA512WITHECDSA",
                                                    "SHA256WITHRSA",
                                                    "SHA384WITHRSA",
                                                    "SHA512WITHRSA"
                                                ],
                                                "type": "string"
                                            },
                                            "Subject": {
                                                "description": "Structure that contains X.500 distinguished name information for your private CA.",
                                                "properties": {
                                                    "CommonName": {
                                                        "description": "Fully qualified domain name (FQDN) associated with the certificate subject.",
                                                        "maxLength": 64,
                                                        "minLength": 0,
                                                        "type": "string"
                                                    },
                                                    "Country": {
                                                        "description": "Two-digit code that specifies the country in which the certificate subject located.",
                                                        "pattern": "[A-Za-z]{2}",
                                                        "type": "string"
                                                    },
                                                    "DistinguishedNameQualifier": {
                                                        "description": "Disambiguating information for the certificate subject.",
                                                        "maxLength": 64,
                                                        "minLength": 0,
                                                        "pattern": "[a-zA-Z0-9'()+-.?:/= ]*",
                                                        "type": "string"
                                                    },
                                                    "GenerationQualifier": {
                                                        "description": "Typically a qualifier appended to the name of an individual. Examples include Jr. for junior, Sr. for senior, and III for third.",
                                                        "maxLength": 3,
                                                        "minLength": 0,
                                                        "type": "string"
                                                    },
                                                    "GivenName": {
                                                        "description": "First name.",
                                                        "maxLength": 16,
                                                        "minLength": 0,
                                                        "type": "string"
                                                    },
                                                    "Initials": {
                                                        "description": "Concatenation that typically contains the first letter of the <b>GivenName</b>, the first letter of the middle name if one exists, and the first letter of the <b>SurName</b>.",
                                                        "maxLength": 5,
                                                        "minLength": 0,
                                                        "type": "string"
                                                    },
                                                    "Locality": {
                                                        "description": "The locality (such as a city or town) in which the certificate subject is located.",
                                                        "maxLength": 128,
                                                        "minLength": 0,
                                                        "type": "string"
                                                    },
                                                    "Organization": {
                                                        "description": "Legal name of the organization with which the certificate subject is affiliated. ",
                                                        "maxLength": 64,
                                                        "minLength": 0,
                                                        "type": "string"
                                                    },
                                                    "OrganizationalUnit": {
                                                        "description": "A subdivision or unit of the organization (such as sales or finance) with which the certificate subject is affiliated.",
                                                        "maxLength": 64,
                                                        "minLength": 0,
                                                        "type": "string"
                                                    },
                                                    "Pseudonym": {
                                                        "description": "Typically a shortened version of a longer <b>GivenName</b>. For example, Jonathan is often shortened to John. Elizabeth is often shortened to Beth, Liz, or Eliza.",
                                                        "maxLength": 128,
                                                        "minLength": 0,
                                                        "type": "string"
                                                    },
                                                    "SerialNumber": {
                                                        "description": "The certificate serial number.",
                                                        "maxLength": 64,
                                                        "minLength": 0,
                                                        "type": "string"
                                                    },
                                                    "State": {
                                                        "description": "State in which the subject of the certificate is located.",
                                                        "maxLength": 128,
                                                        "minLength": 0,
                                                        "type": "string"
                                                    },
                                                    "Surname": {
                                                        "description": "Family name. In the US and the UK, for example, the surname of an individual is ordered last. In Asian cultures the surname is typically ordered first.",
                                                        "maxLength": 40,
                                                        "minLength": 0,
                                                        "type": "string"
                                                    },
                                                    "Title": {
                                                        "description": "A title such as Mr. or Ms., which is pre-pended to the name to refer formally to the certificate subject.",
                                                        "maxLength": 64,
                                                        "minLength": 0,
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "required": [
                                            "KeyAlgorithm",
                                            "SigningAlgorithm",
                                            "Subject"
                                        ],
                                        "type": "object"
                                    },
                                    "CertificateAuthorityType": {
                                        "description": "The type of the certificate authority. Currently, this must be <b>SUBORDINATE</b>.",
                                        "enum": [
                                            "SUBORDINATE"
                                        ],
                                        "type": "string"
                                    },
                                    "IdempotencyToken": {
                                        "description": "Alphanumeric string that can be used to distinguish between calls to <b>CreateCertificateAuthority</b>. Idempotency tokens time out after five minutes. Therefore, if you call <b>CreateCertificateAuthority</b> multiple times with the same idempotency token within a five minute period, ACM PCA recognizes that you are requesting only one certificate. As a result, ACM PCA issues only one. If you change the idempotency token for each call, however, ACM PCA recognizes that you are requesting multiple certificates.",
                                        "maxLength": 36,
                                        "minLength": 1,
                                        "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u00FF]*",
                                        "type": "string"
                                    },
                                    "RevocationConfiguration": {
                                        "description": "Contains a Boolean value that you can use to enable a certification revocation list (CRL) for the CA, the name of the S3 bucket to which ACM PCA will write the CRL, and an optional CNAME alias that you can use to hide the name of your bucket in the <b>CRL Distribution Points</b> extension of your CA certificate. For more information, see the <a>CrlConfiguration</a> structure. ",
                                        "properties": {
                                            "CrlConfiguration": {
                                                "description": "Configuration of the certificate revocation list (CRL), if any, maintained by your private CA.",
                                                "properties": {
                                                    "CustomCname": {
                                                        "description": "Name inserted into the certificate <b>CRL Distribution Points</b> extension that enables the use of an alias for the CRL distribution point. Use this value if you don't want the name of your S3 bucket to be public.",
                                                        "maxLength": 253,
                                                        "minLength": 0,
                                                        "type": "string"
                                                    },
                                                    "Enabled": {
                                                        "description": "Boolean value that specifies whether certificate revocation lists (CRLs) are enabled. You can use this value to enable certificate revocation for a new CA when you call the <a>CreateCertificateAuthority</a> operation or for an existing CA when you call the <a>UpdateCertificateAuthority</a> operation. ",
                                                        "type": "boolean"
                                                    },
                                                    "ExpirationInDays": {
                                                        "description": "Number of days until a certificate expires.",
                                                        "maximum": 5000,
                                                        "minimum": 1,
                                                        "type": "integer"
                                                    },
                                                    "S3BucketName": {
                                                        "description": "Name of the S3 bucket that contains the CRL. If you do not provide a value for the <b>CustomCname</b> argument, the name of your S3 bucket is placed into the <b>CRL Distribution Points</b> extension of the issued certificate. You can change the name of your bucket by calling the <a>UpdateCertificateAuthority</a> operation. You must specify a bucket policy that allows ACM PCA to write the CRL to your bucket.",
                                                        "maxLength": 255,
                                                        "minLength": 3,
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "Enabled"
                                                ],
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "Tags": {
                                        "description": "Key-value pairs that will be attached to the new private CA. You can associate up to 50 tags with a private CA.",
                                        "items": {
                                            "description": "Tags are labels that you can use to identify and organize your private CAs. Each tag consists of a key and an optional value. You can associate up to 50 tags with a private CA. To add one or more tags to a private CA, call the <a>TagCertificateAuthority</a> operation. To remove a tag, call the <a>UntagCertificateAuthority</a> operation. ",
                                            "properties": {
                                                "Key": {
                                                    "description": "Key (name) of the tag.",
                                                    "maxLength": 128,
                                                    "minLength": 1,
                                                    "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                                                    "type": "string"
                                                },
                                                "Value": {
                                                    "description": "Value of the tag.",
                                                    "maxLength": 256,
                                                    "minLength": 0,
                                                    "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "Key"
                                            ],
                                            "type": "object"
                                        },
                                        "maxItems": 50,
                                        "minItems": 1,
                                        "type": "array"
                                    }
                                },
                                "required": [
                                    "CertificateAuthorityConfiguration",
                                    "CertificateAuthorityType"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#CreateCertificateAuthorityAuditReport": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Creates an audit report that lists every time that the your CA private key is used. The report is saved in the Amazon S3 bucket that you specify on input. The <a>IssueCertificate</a> and <a>RevokeCertificate</a> operations use the private key. You can generate a new report every 30 minutes.",
                "operationId": "CreateCertificateAuthorityAuditReport",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "AuditReportId": {
                                            "description": "An alphanumeric string that contains a report identifier.",
                                            "maxLength": 36,
                                            "minLength": 36,
                                            "pattern": "[a-z0-9]{8}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{12}",
                                            "type": "string"
                                        },
                                        "S3Key": {
                                            "description": "The <b>key</b> that uniquely identifies the report file in your S3 bucket.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "RequestInProgressException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "RequestFailedException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "ResourceNotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "InvalidArnException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "InvalidArgsException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "485": {
                        "description": "InvalidStateException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "AuditReportResponseFormat": {
                                        "description": "Format in which to create the report. This can be either <b>JSON</b> or <b>CSV</b>.",
                                        "enum": [
                                            "JSON",
                                            "CSV"
                                        ],
                                        "type": "string"
                                    },
                                    "CertificateAuthorityArn": {
                                        "description": "<p>Amazon Resource Name (ARN) of the CA to be audited. This is of the form:</p> <p> <code>arn:aws:acm-pca:<i>region</i>:<i>account</i>:certificate-authority/<i>12345678-1234-1234-1234-123456789012</i> </code>.</p>",
                                        "maxLength": 200,
                                        "minLength": 5,
                                        "pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:[\\w+=/,.@-]*:[0-9]+:[\\w+=,.@-]+(/[\\w+=/,.@-]+)*",
                                        "type": "string"
                                    },
                                    "S3BucketName": {
                                        "description": "Name of the S3 bucket that will contain the audit report.",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "CertificateAuthorityArn",
                                    "S3BucketName",
                                    "AuditReportResponseFormat"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#DeleteCertificateAuthority": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "<p>Deletes a private certificate authority (CA). You must provide the ARN (Amazon Resource Name) of the private CA that you want to delete. You can find the ARN by calling the <a>ListCertificateAuthorities</a> operation. Before you can delete a CA, you must disable it. Call the <a>UpdateCertificateAuthority</a> operation and set the <b>CertificateAuthorityStatus</b> parameter to <code>DISABLED</code>. </p> <p>Additionally, you can delete a CA if you are waiting for it to be created (the <b>Status</b> field of the <a>CertificateAuthority</a> is <code>CREATING</code>). You can also delete it if the CA has been created but you haven't yet imported the signed certificate (the <b>Status</b> is <code>PENDING_CERTIFICATE</code>) into ACM PCA. </p> <p>If the CA is in one of the aforementioned states and you call <a>DeleteCertificateAuthority</a>, the CA's status changes to <code>DELETED</code>. However, the CA won't be permentantly deleted until the restoration period has passed. By default, if you do not set the <code>PermanentDeletionTimeInDays</code> parameter, the CA remains restorable for 30 days. You can set the parameter from 7 to 30 days. The <a>DescribeCertificateAuthority</a> operation returns the time remaining in the restoration window of a Private CA in the <code>DELETED</code> state. To restore an eligable CA, call the <a>RestoreCertificateAuthority</a> operation.</p>",
                "operationId": "DeleteCertificateAuthority",
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "480": {
                        "description": "ConcurrentModificationException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "ResourceNotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "InvalidArnException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "InvalidStateException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "CertificateAuthorityArn": {
                                        "description": "<p>The Amazon Resource Name (ARN) that was returned when you called <a>CreateCertificateAuthority</a>. This must have the following form: </p> <p> <code>arn:aws:acm-pca:<i>region</i>:<i>account</i>:certificate-authority/<i>12345678-1234-1234-1234-123456789012</i> </code>. </p>",
                                        "maxLength": 200,
                                        "minLength": 5,
                                        "pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:[\\w+=/,.@-]*:[0-9]+:[\\w+=,.@-]+(/[\\w+=/,.@-]+)*",
                                        "type": "string"
                                    },
                                    "PermanentDeletionTimeInDays": {
                                        "description": "The number of days to make a CA restorable after it has been deleted. This can be anywhere from 7 to 30 days, with 30 being the default.",
                                        "maximum": 30,
                                        "minimum": 7,
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "CertificateAuthorityArn"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#DescribeCertificateAuthority": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "<p>Lists information about your private certificate authority (CA). You specify the private CA on input by its ARN (Amazon Resource Name). The output contains the status of your CA. This can be any of the following: </p> <ul> <li> <p> <code>CREATING</code> - ACM PCA is creating your private certificate authority.</p> </li> <li> <p> <code>PENDING_CERTIFICATE</code> - The certificate is pending. You must use your on-premises root or subordinate CA to sign your private CA CSR and then import it into PCA. </p> </li> <li> <p> <code>ACTIVE</code> - Your private CA is active.</p> </li> <li> <p> <code>DISABLED</code> - Your private CA has been disabled.</p> </li> <li> <p> <code>EXPIRED</code> - Your private CA certificate has expired.</p> </li> <li> <p> <code>FAILED</code> - Your private CA has failed. Your CA can fail because of problems such a network outage or backend AWS failure or other errors. A failed CA can never return to the pending state. You must create a new CA. </p> </li> <li> <p> <code>DELETED</code> - Your private CA is within the restoration period, after which it is permanently deleted. The length of time remaining in the CA's restoration period is also included in this operation's output.</p> </li> </ul>",
                "operationId": "DescribeCertificateAuthority",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "CertificateAuthority": {
                                            "description": "A <a>CertificateAuthority</a> structure that contains information about your private CA.",
                                            "properties": {
                                                "Arn": {
                                                    "description": "Amazon Resource Name (ARN) for your private certificate authority (CA). The format is <code> <i>12345678-1234-1234-1234-123456789012</i> </code>.",
                                                    "maxLength": 200,
                                                    "minLength": 5,
                                                    "pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:[\\w+=/,.@-]*:[0-9]+:[\\w+=,.@-]+(/[\\w+=/,.@-]+)*",
                                                    "type": "string"
                                                },
                                                "CertificateAuthorityConfiguration": {
                                                    "description": "Your private CA configuration.",
                                                    "properties": {
                                                        "KeyAlgorithm": {
                                                            "description": "Type of the public key algorithm and size, in bits, of the key pair that your key pair creates when it issues a certificate.",
                                                            "enum": [
                                                                "RSA_2048",
                                                                "RSA_4096",
                                                                "EC_prime256v1",
                                                                "EC_secp384r1"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "SigningAlgorithm": {
                                                            "description": "Name of the algorithm your private CA uses to sign certificate requests.",
                                                            "enum": [
                                                                "SHA256WITHECDSA",
                                                                "SHA384WITHECDSA",
                                                                "SHA512WITHECDSA",
                                                                "SHA256WITHRSA",
                                                                "SHA384WITHRSA",
                                                                "SHA512WITHRSA"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "Subject": {
                                                            "description": "Structure that contains X.500 distinguished name information for your private CA.",
                                                            "properties": {
                                                                "CommonName": {
                                                                    "description": "Fully qualified domain name (FQDN) associated with the certificate subject.",
                                                                    "maxLength": 64,
                                                                    "minLength": 0,
                                                                    "type": "string"
                                                                },
                                                                "Country": {
                                                                    "description": "Two-digit code that specifies the country in which the certificate subject located.",
                                                                    "pattern": "[A-Za-z]{2}",
                                                                    "type": "string"
                                                                },
                                                                "DistinguishedNameQualifier": {
                                                                    "description": "Disambiguating information for the certificate subject.",
                                                                    "maxLength": 64,
                                                                    "minLength": 0,
                                                                    "pattern": "[a-zA-Z0-9'()+-.?:/= ]*",
                                                                    "type": "string"
                                                                },
                                                                "GenerationQualifier": {
                                                                    "description": "Typically a qualifier appended to the name of an individual. Examples include Jr. for junior, Sr. for senior, and III for third.",
                                                                    "maxLength": 3,
                                                                    "minLength": 0,
                                                                    "type": "string"
                                                                },
                                                                "GivenName": {
                                                                    "description": "First name.",
                                                                    "maxLength": 16,
                                                                    "minLength": 0,
                                                                    "type": "string"
                                                                },
                                                                "Initials": {
                                                                    "description": "Concatenation that typically contains the first letter of the <b>GivenName</b>, the first letter of the middle name if one exists, and the first letter of the <b>SurName</b>.",
                                                                    "maxLength": 5,
                                                                    "minLength": 0,
                                                                    "type": "string"
                                                                },
                                                                "Locality": {
                                                                    "description": "The locality (such as a city or town) in which the certificate subject is located.",
                                                                    "maxLength": 128,
                                                                    "minLength": 0,
                                                                    "type": "string"
                                                                },
                                                                "Organization": {
                                                                    "description": "Legal name of the organization with which the certificate subject is affiliated. ",
                                                                    "maxLength": 64,
                                                                    "minLength": 0,
                                                                    "type": "string"
                                                                },
                                                                "OrganizationalUnit": {
                                                                    "description": "A subdivision or unit of the organization (such as sales or finance) with which the certificate subject is affiliated.",
                                                                    "maxLength": 64,
                                                                    "minLength": 0,
                                                                    "type": "string"
                                                                },
                                                                "Pseudonym": {
                                                                    "description": "Typically a shortened version of a longer <b>GivenName</b>. For example, Jonathan is often shortened to John. Elizabeth is often shortened to Beth, Liz, or Eliza.",
                                                                    "maxLength": 128,
                                                                    "minLength": 0,
                                                                    "type": "string"
                                                                },
                                                                "SerialNumber": {
                                                                    "description": "The certificate serial number.",
                                                                    "maxLength": 64,
                                                                    "minLength": 0,
                                                                    "type": "string"
                                                                },
                                                                "State": {
                                                                    "description": "State in which the subject of the certificate is located.",
                                                                    "maxLength": 128,
                                                                    "minLength": 0,
                                                                    "type": "string"
                                                                },
                                                                "Surname": {
                                                                    "description": "Family name. In the US and the UK, for example, the surname of an individual is ordered last. In Asian cultures the surname is typically ordered first.",
                                                                    "maxLength": 40,
                                                                    "minLength": 0,
                                                                    "type": "string"
                                                                },
                                                                "Title": {
                                                                    "description": "A title such as Mr. or Ms., which is pre-pended to the name to refer formally to the certificate subject.",
                                                                    "maxLength": 64,
                                                                    "minLength": 0,
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "required": [
                                                        "KeyAlgorithm",
                                                        "SigningAlgorithm",
                                                        "Subject"
                                                    ],
                                                    "type": "object"
                                                },
                                                "CreatedAt": {
                                                    "description": "Date and time at which your private CA was created.",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "FailureReason": {
                                                    "description": "Reason the request to create your private CA failed.",
                                                    "enum": [
                                                        "REQUEST_TIMED_OUT",
                                                        "UNSUPPORTED_ALGORITHM",
                                                        "OTHER"
                                                    ],
                                                    "type": "string"
                                                },
                                                "LastStateChangeAt": {
                                                    "description": "Date and time at which your private CA was last updated.",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "NotAfter": {
                                                    "description": "Date and time after which your private CA certificate is not valid.",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "NotBefore": {
                                                    "description": "Date and time before which your private CA certificate is not valid.",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "RestorableUntil": {
                                                    "description": "The period during which a deleted CA can be restored. For more information, see the <code>PermanentDeletionTimeInDays</code> parameter of the <a>DeleteCertificateAuthorityRequest</a> operation. ",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "RevocationConfiguration": {
                                                    "description": "Information about the certificate revocation list (CRL) created and maintained by your private CA. ",
                                                    "properties": {
                                                        "CrlConfiguration": {
                                                            "description": "Configuration of the certificate revocation list (CRL), if any, maintained by your private CA.",
                                                            "properties": {
                                                                "CustomCname": {
                                                                    "description": "Name inserted into the certificate <b>CRL Distribution Points</b> extension that enables the use of an alias for the CRL distribution point. Use this value if you don't want the name of your S3 bucket to be public.",
                                                                    "maxLength": 253,
                                                                    "minLength": 0,
                                                                    "type": "string"
                                                                },
                                                                "Enabled": {
                                                                    "description": "Boolean value that specifies whether certificate revocation lists (CRLs) are enabled. You can use this value to enable certificate revocation for a new CA when you call the <a>CreateCertificateAuthority</a> operation or for an existing CA when you call the <a>UpdateCertificateAuthority</a> operation. ",
                                                                    "type": "boolean"
                                                                },
                                                                "ExpirationInDays": {
                                                                    "description": "Number of days until a certificate expires.",
                                                                    "maximum": 5000,
                                                                    "minimum": 1,
                                                                    "type": "integer"
                                                                },
                                                                "S3BucketName": {
                                                                    "description": "Name of the S3 bucket that contains the CRL. If you do not provide a value for the <b>CustomCname</b> argument, the name of your S3 bucket is placed into the <b>CRL Distribution Points</b> extension of the issued certificate. You can change the name of your bucket by calling the <a>UpdateCertificateAuthority</a> operation. You must specify a bucket policy that allows ACM PCA to write the CRL to your bucket.",
                                                                    "maxLength": 255,
                                                                    "minLength": 3,
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "required": [
                                                                "Enabled"
                                                            ],
                                                            "type": "object"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "Serial": {
                                                    "description": "Serial number of your private CA.",
                                                    "type": "string"
                                                },
                                                "Status": {
                                                    "description": "Status of your private CA.",
                                                    "enum": [
                                                        "CREATING",
                                                        "PENDING_CERTIFICATE",
                                                        "ACTIVE",
                                                        "DELETED",
                                                        "DISABLED",
                                                        "EXPIRED",
                                                        "FAILED"
                                                    ],
                                                    "type": "string"
                                                },
                                                "Type": {
                                                    "description": "Type of your private CA.",
                                                    "enum": [
                                                        "SUBORDINATE"
                                                    ],
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "ResourceNotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InvalidArnException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "CertificateAuthorityArn": {
                                        "description": "<p>The Amazon Resource Name (ARN) that was returned when you called <a>CreateCertificateAuthority</a>. This must be of the form: </p> <p> <code>arn:aws:acm-pca:<i>region</i>:<i>account</i>:certificate-authority/<i>12345678-1234-1234-1234-123456789012</i> </code>. </p>",
                                        "maxLength": 200,
                                        "minLength": 5,
                                        "pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:[\\w+=/,.@-]*:[0-9]+:[\\w+=,.@-]+(/[\\w+=/,.@-]+)*",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "CertificateAuthorityArn"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#DescribeCertificateAuthorityAuditReport": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Lists information about a specific audit report created by calling the <a>CreateCertificateAuthorityAuditReport</a> operation. Audit information is created every time the certificate authority (CA) private key is used. The private key is used when you call the <a>IssueCertificate</a> operation or the <a>RevokeCertificate</a> operation. ",
                "operationId": "DescribeCertificateAuthorityAuditReport",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "AuditReportStatus": {
                                            "description": "Specifies whether report creation is in progress, has succeeded, or has failed.",
                                            "enum": [
                                                "CREATING",
                                                "SUCCESS",
                                                "FAILED"
                                            ],
                                            "type": "string"
                                        },
                                        "CreatedAt": {
                                            "description": "The date and time at which the report was created.",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "S3BucketName": {
                                            "description": "Name of the S3 bucket that contains the report.",
                                            "type": "string"
                                        },
                                        "S3Key": {
                                            "description": "S3 <b>key</b> that uniquely identifies the report file in your S3 bucket.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "ResourceNotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InvalidArnException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "InvalidArgsException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "AuditReportId": {
                                        "description": "The report ID returned by calling the <a>CreateCertificateAuthorityAuditReport</a> operation.",
                                        "maxLength": 36,
                                        "minLength": 36,
                                        "pattern": "[a-z0-9]{8}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{12}",
                                        "type": "string"
                                    },
                                    "CertificateAuthorityArn": {
                                        "description": "<p>The Amazon Resource Name (ARN) of the private CA. This must be of the form:</p> <p> <code>arn:aws:acm-pca:<i>region</i>:<i>account</i>:certificate-authority/<i>12345678-1234-1234-1234-123456789012</i> </code>. </p>",
                                        "maxLength": 200,
                                        "minLength": 5,
                                        "pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:[\\w+=/,.@-]*:[0-9]+:[\\w+=,.@-]+(/[\\w+=/,.@-]+)*",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "CertificateAuthorityArn",
                                    "AuditReportId"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#GetCertificate": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Retrieves a certificate from your private CA. The ARN of the certificate is returned when you call the <a>IssueCertificate</a> operation. You must specify both the ARN of your private CA and the ARN of the issued certificate when calling the <b>GetCertificate</b> operation. You can retrieve the certificate if it is in the <b>ISSUED</b> state. You can call the <a>CreateCertificateAuthorityAuditReport</a> operation to create a report that contains information about all of the certificates issued and revoked by your private CA. ",
                "operationId": "GetCertificate",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Certificate": {
                                            "description": "The base64 PEM-encoded certificate specified by the <code>CertificateArn</code> parameter.",
                                            "type": "string"
                                        },
                                        "CertificateChain": {
                                            "description": "The base64 PEM-encoded certificate chain that chains up to the on-premises root CA certificate that you used to sign your private CA certificate. ",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "RequestInProgressException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "RequestFailedException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "ResourceNotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "InvalidArnException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "InvalidStateException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "CertificateArn": {
                                        "description": "<p>The ARN of the issued certificate. The ARN contains the certificate serial number and must be in the following form: </p> <p> <code>arn:aws:acm-pca:<i>region</i>:<i>account</i>:certificate-authority/<i>12345678-1234-1234-1234-123456789012</i>/certificate/<i>286535153982981100925020015808220737245</i> </code> </p>",
                                        "maxLength": 200,
                                        "minLength": 5,
                                        "pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:[\\w+=/,.@-]*:[0-9]+:[\\w+=,.@-]+(/[\\w+=/,.@-]+)*",
                                        "type": "string"
                                    },
                                    "CertificateAuthorityArn": {
                                        "description": "<p>The Amazon Resource Name (ARN) that was returned when you called <a>CreateCertificateAuthority</a>. This must be of the form: </p> <p> <code>arn:aws:acm-pca:<i>region</i>:<i>account</i>:certificate-authority/<i>12345678-1234-1234-1234-123456789012</i> </code>. </p>",
                                        "maxLength": 200,
                                        "minLength": 5,
                                        "pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:[\\w+=/,.@-]*:[0-9]+:[\\w+=,.@-]+(/[\\w+=/,.@-]+)*",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "CertificateAuthorityArn",
                                    "CertificateArn"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#GetCertificateAuthorityCertificate": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Retrieves the certificate and certificate chain for your private certificate authority (CA). Both the certificate and the chain are base64 PEM-encoded. The chain does not include the CA certificate. Each certificate in the chain signs the one before it. ",
                "operationId": "GetCertificateAuthorityCertificate",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Certificate": {
                                            "description": "Base64-encoded certificate authority (CA) certificate.",
                                            "type": "string"
                                        },
                                        "CertificateChain": {
                                            "description": "Base64-encoded certificate chain that includes any intermediate certificates and chains up to root on-premises certificate that you used to sign your private CA certificate. The chain does not include your private CA certificate. ",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "ResourceNotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InvalidStateException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "InvalidArnException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "CertificateAuthorityArn": {
                                        "description": "<p>The Amazon Resource Name (ARN) of your private CA. This is of the form:</p> <p> <code>arn:aws:acm-pca:<i>region</i>:<i>account</i>:certificate-authority/<i>12345678-1234-1234-1234-123456789012</i> </code>. </p>",
                                        "maxLength": 200,
                                        "minLength": 5,
                                        "pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:[\\w+=/,.@-]*:[0-9]+:[\\w+=,.@-]+(/[\\w+=/,.@-]+)*",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "CertificateAuthorityArn"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#GetCertificateAuthorityCsr": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Retrieves the certificate signing request (CSR) for your private certificate authority (CA). The CSR is created when you call the <a>CreateCertificateAuthority</a> operation. Take the CSR to your on-premises X.509 infrastructure and sign it by using your root or a subordinate CA. Then import the signed certificate back into ACM PCA by calling the <a>ImportCertificateAuthorityCertificate</a> operation. The CSR is returned as a base64 PEM-encoded string. ",
                "operationId": "GetCertificateAuthorityCsr",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Csr": {
                                            "description": "The base64 PEM-encoded certificate signing request (CSR) for your private CA certificate.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "RequestInProgressException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "RequestFailedException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "ResourceNotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "InvalidArnException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "InvalidStateException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "CertificateAuthorityArn": {
                                        "description": "<p>The Amazon Resource Name (ARN) that was returned when you called the <a>CreateCertificateAuthority</a> operation. This must be of the form: </p> <p> <code>arn:aws:acm-pca:<i>region</i>:<i>account</i>:certificate-authority/<i>12345678-1234-1234-1234-123456789012</i> </code> </p>",
                                        "maxLength": 200,
                                        "minLength": 5,
                                        "pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:[\\w+=/,.@-]*:[0-9]+:[\\w+=,.@-]+(/[\\w+=/,.@-]+)*",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "CertificateAuthorityArn"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#ImportCertificateAuthorityCertificate": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "<p>Imports your signed private CA certificate into ACM PCA. Before you can call this operation, you must create the private certificate authority by calling the <a>CreateCertificateAuthority</a> operation. You must then generate a certificate signing request (CSR) by calling the <a>GetCertificateAuthorityCsr</a> operation. Take the CSR to your on-premises CA and use the root certificate or a subordinate certificate to sign it. Create a certificate chain and copy the signed certificate and the certificate chain to your working directory. </p> <note> <p>Your certificate chain must not include the private CA certificate that you are importing.</p> </note> <note> <p>Your on-premises CA certificate must be the last certificate in your chain. The subordinate certificate, if any, that your root CA signed must be next to last. The subordinate certificate signed by the preceding subordinate CA must come next, and so on until your chain is built. </p> </note> <note> <p>The chain must be PEM-encoded.</p> </note>",
                "operationId": "ImportCertificateAuthorityCertificate",
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "480": {
                        "description": "ConcurrentModificationException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "RequestInProgressException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "RequestFailedException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "ResourceNotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "InvalidArnException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "485": {
                        "description": "InvalidStateException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "486": {
                        "description": "MalformedCertificateException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "487": {
                        "description": "CertificateMismatchException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "Certificate": {
                                        "description": "The PEM-encoded certificate for your private CA. This must be signed by using your on-premises CA.",
                                        "maxLength": 32768,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "CertificateAuthorityArn": {
                                        "description": "<p>The Amazon Resource Name (ARN) that was returned when you called <a>CreateCertificateAuthority</a>. This must be of the form: </p> <p> <code>arn:aws:acm-pca:<i>region</i>:<i>account</i>:certificate-authority/<i>12345678-1234-1234-1234-123456789012</i> </code> </p>",
                                        "maxLength": 200,
                                        "minLength": 5,
                                        "pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:[\\w+=/,.@-]*:[0-9]+:[\\w+=,.@-]+(/[\\w+=/,.@-]+)*",
                                        "type": "string"
                                    },
                                    "CertificateChain": {
                                        "description": "A PEM-encoded file that contains all of your certificates, other than the certificate you're importing, chaining up to your root CA. Your on-premises root certificate is the last in the chain, and each certificate in the chain signs the one preceding. ",
                                        "maxLength": 2097152,
                                        "minLength": 0,
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "CertificateAuthorityArn",
                                    "Certificate",
                                    "CertificateChain"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#IssueCertificate": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "<p>Uses your private certificate authority (CA) to issue a client certificate. This operation returns the Amazon Resource Name (ARN) of the certificate. You can retrieve the certificate by calling the <a>GetCertificate</a> operation and specifying the ARN. </p> <note> <p>You cannot use the ACM <b>ListCertificateAuthorities</b> operation to retrieve the ARNs of the certificates that you issue by using ACM PCA.</p> </note>",
                "operationId": "IssueCertificate",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "CertificateArn": {
                                            "description": "<p>The Amazon Resource Name (ARN) of the issued certificate and the certificate serial number. This is of the form:</p> <p> <code>arn:aws:acm-pca:<i>region</i>:<i>account</i>:certificate-authority/<i>12345678-1234-1234-1234-123456789012</i>/certificate/<i>286535153982981100925020015808220737245</i> </code> </p>",
                                            "maxLength": 200,
                                            "minLength": 5,
                                            "pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:[\\w+=/,.@-]*:[0-9]+:[\\w+=,.@-]+(/[\\w+=/,.@-]+)*",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "LimitExceededException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "ResourceNotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "InvalidStateException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "InvalidArnException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "InvalidArgsException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "485": {
                        "description": "MalformedCSRException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "CertificateAuthorityArn": {
                                        "description": "<p>The Amazon Resource Name (ARN) that was returned when you called <a>CreateCertificateAuthority</a>. This must be of the form:</p> <p> <code>arn:aws:acm-pca:<i>region</i>:<i>account</i>:certificate-authority/<i>12345678-1234-1234-1234-123456789012</i> </code> </p>",
                                        "maxLength": 200,
                                        "minLength": 5,
                                        "pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:[\\w+=/,.@-]*:[0-9]+:[\\w+=,.@-]+(/[\\w+=/,.@-]+)*",
                                        "type": "string"
                                    },
                                    "Csr": {
                                        "description": "<p>The certificate signing request (CSR) for the certificate you want to issue. You can use the following OpenSSL command to create the CSR and a 2048 bit RSA private key. </p> <p> <code>openssl req -new -newkey rsa:2048 -days 365 -keyout private/test_cert_priv_key.pem -out csr/test_cert_.csr</code> </p> <p>If you have a configuration file, you can use the following OpenSSL command. The <code>usr_cert</code> block in the configuration file contains your X509 version 3 extensions. </p> <p> <code>openssl req -new -config openssl_rsa.cnf -extensions usr_cert -newkey rsa:2048 -days -365 -keyout private/test_cert_priv_key.pem -out csr/test_cert_.csr</code> </p>",
                                        "maxLength": 32768,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "IdempotencyToken": {
                                        "description": "Custom string that can be used to distinguish between calls to the <b>IssueCertificate</b> operation. Idempotency tokens time out after one hour. Therefore, if you call <b>IssueCertificate</b> multiple times with the same idempotency token within 5 minutes, ACM PCA recognizes that you are requesting only one certificate and will issue only one. If you change the idempotency token for each call, PCA recognizes that you are requesting multiple certificates.",
                                        "maxLength": 36,
                                        "minLength": 1,
                                        "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u00FF]*",
                                        "type": "string"
                                    },
                                    "SigningAlgorithm": {
                                        "description": "The name of the algorithm that will be used to sign the certificate to be issued.",
                                        "enum": [
                                            "SHA256WITHECDSA",
                                            "SHA384WITHECDSA",
                                            "SHA512WITHECDSA",
                                            "SHA256WITHRSA",
                                            "SHA384WITHRSA",
                                            "SHA512WITHRSA"
                                        ],
                                        "type": "string"
                                    },
                                    "Validity": {
                                        "description": "The type of the validity period.",
                                        "properties": {
                                            "Type": {
                                                "description": "Specifies whether the <code>Value</code> parameter represents days, months, or years.",
                                                "enum": [
                                                    "END_DATE",
                                                    "ABSOLUTE",
                                                    "DAYS",
                                                    "MONTHS",
                                                    "YEARS"
                                                ],
                                                "type": "string"
                                            },
                                            "Value": {
                                                "description": "Time period.",
                                                "minimum": 1,
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "Value",
                                            "Type"
                                        ],
                                        "type": "object"
                                    }
                                },
                                "required": [
                                    "CertificateAuthorityArn",
                                    "Csr",
                                    "SigningAlgorithm",
                                    "Validity"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#ListCertificateAuthorities": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Lists the private certificate authorities that you created by using the <a>CreateCertificateAuthority</a> operation.",
                "operationId": "ListCertificateAuthorities",
                "parameters": [
                    {
                        "description": "Pagination limit",
                        "in": "query",
                        "name": "MaxResults",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Pagination token",
                        "in": "query",
                        "name": "NextToken",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "CertificateAuthorities": {
                                            "description": "Summary information about each certificate authority you have created.",
                                            "items": {
                                                "description": "Contains information about your private certificate authority (CA). Your private CA can issue and revoke X.509 digital certificates. Digital certificates verify that the entity named in the certificate <b>Subject</b> field owns or controls the public key contained in the <b>Subject Public Key Info</b> field. Call the <a>CreateCertificateAuthority</a> operation to create your private CA. You must then call the <a>GetCertificateAuthorityCertificate</a> operation to retrieve a private CA certificate signing request (CSR). Take the CSR to your on-premises CA and sign it with the root CA certificate or a subordinate certificate. Call the <a>ImportCertificateAuthorityCertificate</a> operation to import the signed certificate into AWS Certificate Manager (ACM). ",
                                                "properties": {
                                                    "Arn": {
                                                        "description": "Amazon Resource Name (ARN) for your private certificate authority (CA). The format is <code> <i>12345678-1234-1234-1234-123456789012</i> </code>.",
                                                        "maxLength": 200,
                                                        "minLength": 5,
                                                        "pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:[\\w+=/,.@-]*:[0-9]+:[\\w+=,.@-]+(/[\\w+=/,.@-]+)*",
                                                        "type": "string"
                                                    },
                                                    "CertificateAuthorityConfiguration": {
                                                        "description": "Your private CA configuration.",
                                                        "properties": {
                                                            "KeyAlgorithm": {
                                                                "description": "Type of the public key algorithm and size, in bits, of the key pair that your key pair creates when it issues a certificate.",
                                                                "enum": [
                                                                    "RSA_2048",
                                                                    "RSA_4096",
                                                                    "EC_prime256v1",
                                                                    "EC_secp384r1"
                                                                ],
                                                                "type": "string"
                                                            },
                                                            "SigningAlgorithm": {
                                                                "description": "Name of the algorithm your private CA uses to sign certificate requests.",
                                                                "enum": [
                                                                    "SHA256WITHECDSA",
                                                                    "SHA384WITHECDSA",
                                                                    "SHA512WITHECDSA",
                                                                    "SHA256WITHRSA",
                                                                    "SHA384WITHRSA",
                                                                    "SHA512WITHRSA"
                                                                ],
                                                                "type": "string"
                                                            },
                                                            "Subject": {
                                                                "description": "Structure that contains X.500 distinguished name information for your private CA.",
                                                                "properties": {
                                                                    "CommonName": {
                                                                        "description": "Fully qualified domain name (FQDN) associated with the certificate subject.",
                                                                        "maxLength": 64,
                                                                        "minLength": 0,
                                                                        "type": "string"
                                                                    },
                                                                    "Country": {
                                                                        "description": "Two-digit code that specifies the country in which the certificate subject located.",
                                                                        "pattern": "[A-Za-z]{2}",
                                                                        "type": "string"
                                                                    },
                                                                    "DistinguishedNameQualifier": {
                                                                        "description": "Disambiguating information for the certificate subject.",
                                                                        "maxLength": 64,
                                                                        "minLength": 0,
                                                                        "pattern": "[a-zA-Z0-9'()+-.?:/= ]*",
                                                                        "type": "string"
                                                                    },
                                                                    "GenerationQualifier": {
                                                                        "description": "Typically a qualifier appended to the name of an individual. Examples include Jr. for junior, Sr. for senior, and III for third.",
                                                                        "maxLength": 3,
                                                                        "minLength": 0,
                                                                        "type": "string"
                                                                    },
                                                                    "GivenName": {
                                                                        "description": "First name.",
                                                                        "maxLength": 16,
                                                                        "minLength": 0,
                                                                        "type": "string"
                                                                    },
                                                                    "Initials": {
                                                                        "description": "Concatenation that typically contains the first letter of the <b>GivenName</b>, the first letter of the middle name if one exists, and the first letter of the <b>SurName</b>.",
                                                                        "maxLength": 5,
                                                                        "minLength": 0,
                                                                        "type": "string"
                                                                    },
                                                                    "Locality": {
                                                                        "description": "The locality (such as a city or town) in which the certificate subject is located.",
                                                                        "maxLength": 128,
                                                                        "minLength": 0,
                                                                        "type": "string"
                                                                    },
                                                                    "Organization": {
                                                                        "description": "Legal name of the organization with which the certificate subject is affiliated. ",
                                                                        "maxLength": 64,
                                                                        "minLength": 0,
                                                                        "type": "string"
                                                                    },
                                                                    "OrganizationalUnit": {
                                                                        "description": "A subdivision or unit of the organization (such as sales or finance) with which the certificate subject is affiliated.",
                                                                        "maxLength": 64,
                                                                        "minLength": 0,
                                                                        "type": "string"
                                                                    },
                                                                    "Pseudonym": {
                                                                        "description": "Typically a shortened version of a longer <b>GivenName</b>. For example, Jonathan is often shortened to John. Elizabeth is often shortened to Beth, Liz, or Eliza.",
                                                                        "maxLength": 128,
                                                                        "minLength": 0,
                                                                        "type": "string"
                                                                    },
                                                                    "SerialNumber": {
                                                                        "description": "The certificate serial number.",
                                                                        "maxLength": 64,
                                                                        "minLength": 0,
                                                                        "type": "string"
                                                                    },
                                                                    "State": {
                                                                        "description": "State in which the subject of the certificate is located.",
                                                                        "maxLength": 128,
                                                                        "minLength": 0,
                                                                        "type": "string"
                                                                    },
                                                                    "Surname": {
                                                                        "description": "Family name. In the US and the UK, for example, the surname of an individual is ordered last. In Asian cultures the surname is typically ordered first.",
                                                                        "maxLength": 40,
                                                                        "minLength": 0,
                                                                        "type": "string"
                                                                    },
                                                                    "Title": {
                                                                        "description": "A title such as Mr. or Ms., which is pre-pended to the name to refer formally to the certificate subject.",
                                                                        "maxLength": 64,
                                                                        "minLength": 0,
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "required": [
                                                            "KeyAlgorithm",
                                                            "SigningAlgorithm",
                                                            "Subject"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "CreatedAt": {
                                                        "description": "Date and time at which your private CA was created.",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "FailureReason": {
                                                        "description": "Reason the request to create your private CA failed.",
                                                        "enum": [
                                                            "REQUEST_TIMED_OUT",
                                                            "UNSUPPORTED_ALGORITHM",
                                                            "OTHER"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "LastStateChangeAt": {
                                                        "description": "Date and time at which your private CA was last updated.",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "NotAfter": {
                                                        "description": "Date and time after which your private CA certificate is not valid.",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "NotBefore": {
                                                        "description": "Date and time before which your private CA certificate is not valid.",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "RestorableUntil": {
                                                        "description": "The period during which a deleted CA can be restored. For more information, see the <code>PermanentDeletionTimeInDays</code> parameter of the <a>DeleteCertificateAuthorityRequest</a> operation. ",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "RevocationConfiguration": {
                                                        "description": "Information about the certificate revocation list (CRL) created and maintained by your private CA. ",
                                                        "properties": {
                                                            "CrlConfiguration": {
                                                                "description": "Configuration of the certificate revocation list (CRL), if any, maintained by your private CA.",
                                                                "properties": {
                                                                    "CustomCname": {
                                                                        "description": "Name inserted into the certificate <b>CRL Distribution Points</b> extension that enables the use of an alias for the CRL distribution point. Use this value if you don't want the name of your S3 bucket to be public.",
                                                                        "maxLength": 253,
                                                                        "minLength": 0,
                                                                        "type": "string"
                                                                    },
                                                                    "Enabled": {
                                                                        "description": "Boolean value that specifies whether certificate revocation lists (CRLs) are enabled. You can use this value to enable certificate revocation for a new CA when you call the <a>CreateCertificateAuthority</a> operation or for an existing CA when you call the <a>UpdateCertificateAuthority</a> operation. ",
                                                                        "type": "boolean"
                                                                    },
                                                                    "ExpirationInDays": {
                                                                        "description": "Number of days until a certificate expires.",
                                                                        "maximum": 5000,
                                                                        "minimum": 1,
                                                                        "type": "integer"
                                                                    },
                                                                    "S3BucketName": {
                                                                        "description": "Name of the S3 bucket that contains the CRL. If you do not provide a value for the <b>CustomCname</b> argument, the name of your S3 bucket is placed into the <b>CRL Distribution Points</b> extension of the issued certificate. You can change the name of your bucket by calling the <a>UpdateCertificateAuthority</a> operation. You must specify a bucket policy that allows ACM PCA to write the CRL to your bucket.",
                                                                        "maxLength": 255,
                                                                        "minLength": 3,
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "Enabled"
                                                                ],
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "Serial": {
                                                        "description": "Serial number of your private CA.",
                                                        "type": "string"
                                                    },
                                                    "Status": {
                                                        "description": "Status of your private CA.",
                                                        "enum": [
                                                            "CREATING",
                                                            "PENDING_CERTIFICATE",
                                                            "ACTIVE",
                                                            "DELETED",
                                                            "DISABLED",
                                                            "EXPIRED",
                                                            "FAILED"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "Type": {
                                                        "description": "Type of your private CA.",
                                                        "enum": [
                                                            "SUBORDINATE"
                                                        ],
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "NextToken": {
                                            "description": "When the list is truncated, this value is present and should be used for the <code>NextToken</code> parameter in a subsequent pagination request.",
                                            "maxLength": 500,
                                            "minLength": 1,
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "InvalidNextTokenException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "MaxResults": {
                                        "description": "Use this parameter when paginating results to specify the maximum number of items to return in the response on each page. If additional items exist beyond the number you specify, the <code>NextToken</code> element is sent in the response. Use this <code>NextToken</code> value in a subsequent request to retrieve additional items.",
                                        "maximum": 1000,
                                        "minimum": 1,
                                        "type": "integer"
                                    },
                                    "NextToken": {
                                        "description": "Use this parameter when paginating results in a subsequent request after you receive a response with truncated results. Set it to the value of the <code>NextToken</code> parameter from the response you just received.",
                                        "maxLength": 500,
                                        "minLength": 1,
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#ListTags": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Lists the tags, if any, that are associated with your private CA. Tags are labels that you can use to identify and organize your CAs. Each tag consists of a key and an optional value. Call the <a>TagCertificateAuthority</a> operation to add one or more tags to your CA. Call the <a>UntagCertificateAuthority</a> operation to remove tags. ",
                "operationId": "ListTags",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "NextToken": {
                                            "description": "When the list is truncated, this value is present and should be used for the <b>NextToken</b> parameter in a subsequent pagination request. ",
                                            "maxLength": 500,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "Tags": {
                                            "description": "The tags associated with your private CA.",
                                            "items": {
                                                "description": "Tags are labels that you can use to identify and organize your private CAs. Each tag consists of a key and an optional value. You can associate up to 50 tags with a private CA. To add one or more tags to a private CA, call the <a>TagCertificateAuthority</a> operation. To remove a tag, call the <a>UntagCertificateAuthority</a> operation. ",
                                                "properties": {
                                                    "Key": {
                                                        "description": "Key (name) of the tag.",
                                                        "maxLength": 128,
                                                        "minLength": 1,
                                                        "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                                                        "type": "string"
                                                    },
                                                    "Value": {
                                                        "description": "Value of the tag.",
                                                        "maxLength": 256,
                                                        "minLength": 0,
                                                        "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "Key"
                                                ],
                                                "type": "object"
                                            },
                                            "maxItems": 50,
                                            "minItems": 1,
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "ResourceNotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InvalidArnException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "CertificateAuthorityArn": {
                                        "description": "<p>The Amazon Resource Name (ARN) that was returned when you called the <a>CreateCertificateAuthority</a> operation. This must be of the form: </p> <p> <code>arn:aws:acm-pca:<i>region</i>:<i>account</i>:certificate-authority/<i>12345678-1234-1234-1234-123456789012</i> </code> </p>",
                                        "maxLength": 200,
                                        "minLength": 5,
                                        "pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:[\\w+=/,.@-]*:[0-9]+:[\\w+=,.@-]+(/[\\w+=/,.@-]+)*",
                                        "type": "string"
                                    },
                                    "MaxResults": {
                                        "description": "Use this parameter when paginating results to specify the maximum number of items to return in the response. If additional items exist beyond the number you specify, the <b>NextToken</b> element is sent in the response. Use this <b>NextToken</b> value in a subsequent request to retrieve additional items.",
                                        "maximum": 1000,
                                        "minimum": 1,
                                        "type": "integer"
                                    },
                                    "NextToken": {
                                        "description": "Use this parameter when paginating results in a subsequent request after you receive a response with truncated results. Set it to the value of <b>NextToken</b> from the response you just received.",
                                        "maxLength": 500,
                                        "minLength": 1,
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "CertificateAuthorityArn"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#RestoreCertificateAuthority": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Restores a certificate authority (CA) that is in the <code>DELETED</code> state. You can restore a CA during the period that you defined in the <b>PermanentDeletionTimeInDays</b> parameter of the <a>DeleteCertificateAuthority</a> operation. Currently, you can specify 7 to 30 days. If you did not specify a <b>PermanentDeletionTimeInDays</b> value, by default you can restore the CA at any time in a 30 day period. You can check the time remaining in the restoration period of a private CA in the <code>DELETED</code> state by calling the <a>DescribeCertificateAuthority</a> or <a>ListCertificateAuthorities</a> operations. The status of a restored CA is set to its pre-deletion status when the <b>RestoreCertificateAuthority</b> operation returns. To change its status to <code>ACTIVE</code>, call the <a>UpdateCertificateAuthority</a> operation. If the private CA was in the <code>PENDING_CERTIFICATE</code> state at deletion, you must use the <a>ImportCertificateAuthorityCertificate</a> operation to import a certificate authority into the private CA before it can be activated. You cannot restore a CA after the restoration period has ended.",
                "operationId": "RestoreCertificateAuthority",
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "480": {
                        "description": "ResourceNotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InvalidStateException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "InvalidArnException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "CertificateAuthorityArn": {
                                        "description": "<p>The Amazon Resource Name (ARN) that was returned when you called the <a>CreateCertificateAuthority</a> operation. This must be of the form: </p> <p> <code>arn:aws:acm-pca:<i>region</i>:<i>account</i>:certificate-authority/<i>12345678-1234-1234-1234-123456789012</i> </code> </p>",
                                        "maxLength": 200,
                                        "minLength": 5,
                                        "pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:[\\w+=/,.@-]*:[0-9]+:[\\w+=,.@-]+(/[\\w+=/,.@-]+)*",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "CertificateAuthorityArn"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#RevokeCertificate": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Revokes a certificate that you issued by calling the <a>IssueCertificate</a> operation. If you enable a certificate revocation list (CRL) when you create or update your private CA, information about the revoked certificates will be included in the CRL. ACM PCA writes the CRL to an S3 bucket that you specify. For more information about revocation, see the <a>CrlConfiguration</a> structure. ACM PCA also writes revocation information to the audit report. For more information, see <a>CreateCertificateAuthorityAuditReport</a>. ",
                "operationId": "RevokeCertificate",
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "480": {
                        "description": "ConcurrentModificationException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InvalidArnException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "InvalidStateException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "LimitExceededException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "ResourceNotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "485": {
                        "description": "RequestAlreadyProcessedException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "486": {
                        "description": "RequestInProgressException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "487": {
                        "description": "RequestFailedException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "CertificateAuthorityArn": {
                                        "description": "<p>Amazon Resource Name (ARN) of the private CA that issued the certificate to be revoked. This must be of the form:</p> <p> <code>arn:aws:acm-pca:<i>region</i>:<i>account</i>:certificate-authority/<i>12345678-1234-1234-1234-123456789012</i> </code> </p>",
                                        "maxLength": 200,
                                        "minLength": 5,
                                        "pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:[\\w+=/,.@-]*:[0-9]+:[\\w+=,.@-]+(/[\\w+=/,.@-]+)*",
                                        "type": "string"
                                    },
                                    "CertificateSerial": {
                                        "description": "<p>Serial number of the certificate to be revoked. This must be in hexadecimal format. You can retrieve the serial number by calling <a>GetCertificate</a> with the Amazon Resource Name (ARN) of the certificate you want and the ARN of your private CA. The <b>GetCertificate</b> operation retrieves the certificate in the PEM format. You can use the following OpenSSL command to list the certificate in text format and copy the hexadecimal serial number. </p> <p> <code>openssl x509 -in <i>file_path</i> -text -noout</code> </p> <p>You can also copy the serial number from the console or use the <a href=\"https://docs.aws.amazon.com/acm/latest/APIReference/API_DescribeCertificate.html\">DescribeCertificate</a> operation in the <i>AWS Certificate Manager API Reference</i>. </p>",
                                        "maxLength": 128,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "RevocationReason": {
                                        "description": "Specifies why you revoked the certificate.",
                                        "enum": [
                                            "UNSPECIFIED",
                                            "KEY_COMPROMISE",
                                            "CERTIFICATE_AUTHORITY_COMPROMISE",
                                            "AFFILIATION_CHANGED",
                                            "SUPERSEDED",
                                            "CESSATION_OF_OPERATION",
                                            "PRIVILEGE_WITHDRAWN",
                                            "A_A_COMPROMISE"
                                        ],
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "CertificateAuthorityArn",
                                    "CertificateSerial",
                                    "RevocationReason"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#TagCertificateAuthority": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Adds one or more tags to your private CA. Tags are labels that you can use to identify and organize your AWS resources. Each tag consists of a key and an optional value. You specify the private CA on input by its Amazon Resource Name (ARN). You specify the tag by using a key-value pair. You can apply a tag to just one private CA if you want to identify a specific characteristic of that CA, or you can apply the same tag to multiple private CAs if you want to filter for a common relationship among those CAs. To remove one or more tags, use the <a>UntagCertificateAuthority</a> operation. Call the <a>ListTags</a> operation to see what tags are associated with your CA. ",
                "operationId": "TagCertificateAuthority",
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "480": {
                        "description": "ResourceNotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InvalidArnException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "InvalidStateException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "InvalidTagException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "TooManyTagsException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "CertificateAuthorityArn": {
                                        "description": "<p>The Amazon Resource Name (ARN) that was returned when you called <a>CreateCertificateAuthority</a>. This must be of the form: </p> <p> <code>arn:aws:acm-pca:<i>region</i>:<i>account</i>:certificate-authority/<i>12345678-1234-1234-1234-123456789012</i> </code> </p>",
                                        "maxLength": 200,
                                        "minLength": 5,
                                        "pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:[\\w+=/,.@-]*:[0-9]+:[\\w+=,.@-]+(/[\\w+=/,.@-]+)*",
                                        "type": "string"
                                    },
                                    "Tags": {
                                        "description": "List of tags to be associated with the CA.",
                                        "items": {
                                            "description": "Tags are labels that you can use to identify and organize your private CAs. Each tag consists of a key and an optional value. You can associate up to 50 tags with a private CA. To add one or more tags to a private CA, call the <a>TagCertificateAuthority</a> operation. To remove a tag, call the <a>UntagCertificateAuthority</a> operation. ",
                                            "properties": {
                                                "Key": {
                                                    "description": "Key (name) of the tag.",
                                                    "maxLength": 128,
                                                    "minLength": 1,
                                                    "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                                                    "type": "string"
                                                },
                                                "Value": {
                                                    "description": "Value of the tag.",
                                                    "maxLength": 256,
                                                    "minLength": 0,
                                                    "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "Key"
                                            ],
                                            "type": "object"
                                        },
                                        "maxItems": 50,
                                        "minItems": 1,
                                        "type": "array"
                                    }
                                },
                                "required": [
                                    "CertificateAuthorityArn",
                                    "Tags"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#UntagCertificateAuthority": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Remove one or more tags from your private CA. A tag consists of a key-value pair. If you do not specify the value portion of the tag when calling this operation, the tag will be removed regardless of value. If you specify a value, the tag is removed only if it is associated with the specified value. To add tags to a private CA, use the <a>TagCertificateAuthority</a>. Call the <a>ListTags</a> operation to see what tags are associated with your CA. ",
                "operationId": "UntagCertificateAuthority",
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "480": {
                        "description": "ResourceNotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InvalidArnException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "InvalidStateException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "InvalidTagException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "CertificateAuthorityArn": {
                                        "description": "<p>The Amazon Resource Name (ARN) that was returned when you called <a>CreateCertificateAuthority</a>. This must be of the form: </p> <p> <code>arn:aws:acm-pca:<i>region</i>:<i>account</i>:certificate-authority/<i>12345678-1234-1234-1234-123456789012</i> </code> </p>",
                                        "maxLength": 200,
                                        "minLength": 5,
                                        "pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:[\\w+=/,.@-]*:[0-9]+:[\\w+=,.@-]+(/[\\w+=/,.@-]+)*",
                                        "type": "string"
                                    },
                                    "Tags": {
                                        "description": "List of tags to be removed from the CA.",
                                        "items": {
                                            "description": "Tags are labels that you can use to identify and organize your private CAs. Each tag consists of a key and an optional value. You can associate up to 50 tags with a private CA. To add one or more tags to a private CA, call the <a>TagCertificateAuthority</a> operation. To remove a tag, call the <a>UntagCertificateAuthority</a> operation. ",
                                            "properties": {
                                                "Key": {
                                                    "description": "Key (name) of the tag.",
                                                    "maxLength": 128,
                                                    "minLength": 1,
                                                    "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                                                    "type": "string"
                                                },
                                                "Value": {
                                                    "description": "Value of the tag.",
                                                    "maxLength": 256,
                                                    "minLength": 0,
                                                    "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "Key"
                                            ],
                                            "type": "object"
                                        },
                                        "maxItems": 50,
                                        "minItems": 1,
                                        "type": "array"
                                    }
                                },
                                "required": [
                                    "CertificateAuthorityArn",
                                    "Tags"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#UpdateCertificateAuthority": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Updates the status or configuration of a private certificate authority (CA). Your private CA must be in the <code>ACTIVE</code> or <code>DISABLED</code> state before you can update it. You can disable a private CA that is in the <code>ACTIVE</code> state or make a CA that is in the <code>DISABLED</code> state active again.",
                "operationId": "UpdateCertificateAuthority",
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "480": {
                        "description": "ConcurrentModificationException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "ResourceNotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "InvalidArgsException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "InvalidArnException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "InvalidStateException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "485": {
                        "description": "InvalidPolicyException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "CertificateAuthorityArn": {
                                        "description": "<p>Amazon Resource Name (ARN) of the private CA that issued the certificate to be revoked. This must be of the form:</p> <p> <code>arn:aws:acm-pca:<i>region</i>:<i>account</i>:certificate-authority/<i>12345678-1234-1234-1234-123456789012</i> </code> </p>",
                                        "maxLength": 200,
                                        "minLength": 5,
                                        "pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:[\\w+=/,.@-]*:[0-9]+:[\\w+=,.@-]+(/[\\w+=/,.@-]+)*",
                                        "type": "string"
                                    },
                                    "RevocationConfiguration": {
                                        "description": "Revocation information for your private CA.",
                                        "properties": {
                                            "CrlConfiguration": {
                                                "description": "Configuration of the certificate revocation list (CRL), if any, maintained by your private CA.",
                                                "properties": {
                                                    "CustomCname": {
                                                        "description": "Name inserted into the certificate <b>CRL Distribution Points</b> extension that enables the use of an alias for the CRL distribution point. Use this value if you don't want the name of your S3 bucket to be public.",
                                                        "maxLength": 253,
                                                        "minLength": 0,
                                                        "type": "string"
                                                    },
                                                    "Enabled": {
                                                        "description": "Boolean value that specifies whether certificate revocation lists (CRLs) are enabled. You can use this value to enable certificate revocation for a new CA when you call the <a>CreateCertificateAuthority</a> operation or for an existing CA when you call the <a>UpdateCertificateAuthority</a> operation. ",
                                                        "type": "boolean"
                                                    },
                                                    "ExpirationInDays": {
                                                        "description": "Number of days until a certificate expires.",
                                                        "maximum": 5000,
                                                        "minimum": 1,
                                                        "type": "integer"
                                                    },
                                                    "S3BucketName": {
                                                        "description": "Name of the S3 bucket that contains the CRL. If you do not provide a value for the <b>CustomCname</b> argument, the name of your S3 bucket is placed into the <b>CRL Distribution Points</b> extension of the issued certificate. You can change the name of your bucket by calling the <a>UpdateCertificateAuthority</a> operation. You must specify a bucket policy that allows ACM PCA to write the CRL to your bucket.",
                                                        "maxLength": 255,
                                                        "minLength": 3,
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "Enabled"
                                                ],
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "Status": {
                                        "description": "Status of your private CA.",
                                        "enum": [
                                            "CREATING",
                                            "PENDING_CERTIFICATE",
                                            "ACTIVE",
                                            "DELETED",
                                            "DISABLED",
                                            "EXPIRED",
                                            "FAILED"
                                        ],
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "CertificateAuthorityArn"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        }
    },
    "components": {
        "schemas": {
            "ASN1Subject": {
                "description": "Contains information about the certificate subject. The certificate can be one issued by your private certificate authority (CA) or it can be your private CA certificate. The <b>Subject</b> field in the certificate identifies the entity that owns or controls the public key in the certificate. The entity can be a user, computer, device, or service. The <b>Subject</b> must contain an X.500 distinguished name (DN). A DN is a sequence of relative distinguished names (RDNs). The RDNs are separated by commas in the certificate. The DN must be unique for each entity, but your private CA can issue more than one certificate with the same DN to the same entity. ",
                "properties": {
                    "CommonName": {
                        "description": "Fully qualified domain name (FQDN) associated with the certificate subject.",
                        "maxLength": 64,
                        "minLength": 0,
                        "type": "string"
                    },
                    "Country": {
                        "description": "Two-digit code that specifies the country in which the certificate subject located.",
                        "pattern": "[A-Za-z]{2}",
                        "type": "string"
                    },
                    "DistinguishedNameQualifier": {
                        "description": "Disambiguating information for the certificate subject.",
                        "maxLength": 64,
                        "minLength": 0,
                        "pattern": "[a-zA-Z0-9'()+-.?:/= ]*",
                        "type": "string"
                    },
                    "GenerationQualifier": {
                        "description": "Typically a qualifier appended to the name of an individual. Examples include Jr. for junior, Sr. for senior, and III for third.",
                        "maxLength": 3,
                        "minLength": 0,
                        "type": "string"
                    },
                    "GivenName": {
                        "description": "First name.",
                        "maxLength": 16,
                        "minLength": 0,
                        "type": "string"
                    },
                    "Initials": {
                        "description": "Concatenation that typically contains the first letter of the <b>GivenName</b>, the first letter of the middle name if one exists, and the first letter of the <b>SurName</b>.",
                        "maxLength": 5,
                        "minLength": 0,
                        "type": "string"
                    },
                    "Locality": {
                        "description": "The locality (such as a city or town) in which the certificate subject is located.",
                        "maxLength": 128,
                        "minLength": 0,
                        "type": "string"
                    },
                    "Organization": {
                        "description": "Legal name of the organization with which the certificate subject is affiliated. ",
                        "maxLength": 64,
                        "minLength": 0,
                        "type": "string"
                    },
                    "OrganizationalUnit": {
                        "description": "A subdivision or unit of the organization (such as sales or finance) with which the certificate subject is affiliated.",
                        "maxLength": 64,
                        "minLength": 0,
                        "type": "string"
                    },
                    "Pseudonym": {
                        "description": "Typically a shortened version of a longer <b>GivenName</b>. For example, Jonathan is often shortened to John. Elizabeth is often shortened to Beth, Liz, or Eliza.",
                        "maxLength": 128,
                        "minLength": 0,
                        "type": "string"
                    },
                    "SerialNumber": {
                        "description": "The certificate serial number.",
                        "maxLength": 64,
                        "minLength": 0,
                        "type": "string"
                    },
                    "State": {
                        "description": "State in which the subject of the certificate is located.",
                        "maxLength": 128,
                        "minLength": 0,
                        "type": "string"
                    },
                    "Surname": {
                        "description": "Family name. In the US and the UK, for example, the surname of an individual is ordered last. In Asian cultures the surname is typically ordered first.",
                        "maxLength": 40,
                        "minLength": 0,
                        "type": "string"
                    },
                    "Title": {
                        "description": "A title such as Mr. or Ms., which is pre-pended to the name to refer formally to the certificate subject.",
                        "maxLength": 64,
                        "minLength": 0,
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Arn": {
                "maxLength": 200,
                "minLength": 5,
                "pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:[\\w+=/,.@-]*:[0-9]+:[\\w+=,.@-]+(/[\\w+=/,.@-]+)*",
                "type": "string"
            },
            "AuditReportId": {
                "maxLength": 36,
                "minLength": 36,
                "pattern": "[a-z0-9]{8}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{12}",
                "type": "string"
            },
            "AuditReportResponseFormat": {
                "enum": [
                    "JSON",
                    "CSV"
                ],
                "type": "string"
            },
            "AuditReportStatus": {
                "enum": [
                    "CREATING",
                    "SUCCESS",
                    "FAILED"
                ],
                "type": "string"
            },
            "Boolean": {
                "type": "boolean"
            },
            "CertificateAuthorities": {
                "items": {
                    "description": "Contains information about your private certificate authority (CA). Your private CA can issue and revoke X.509 digital certificates. Digital certificates verify that the entity named in the certificate <b>Subject</b> field owns or controls the public key contained in the <b>Subject Public Key Info</b> field. Call the <a>CreateCertificateAuthority</a> operation to create your private CA. You must then call the <a>GetCertificateAuthorityCertificate</a> operation to retrieve a private CA certificate signing request (CSR). Take the CSR to your on-premises CA and sign it with the root CA certificate or a subordinate certificate. Call the <a>ImportCertificateAuthorityCertificate</a> operation to import the signed certificate into AWS Certificate Manager (ACM). ",
                    "properties": {
                        "Arn": {
                            "description": "Amazon Resource Name (ARN) for your private certificate authority (CA). The format is <code> <i>12345678-1234-1234-1234-123456789012</i> </code>.",
                            "maxLength": 200,
                            "minLength": 5,
                            "pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:[\\w+=/,.@-]*:[0-9]+:[\\w+=,.@-]+(/[\\w+=/,.@-]+)*",
                            "type": "string"
                        },
                        "CertificateAuthorityConfiguration": {
                            "description": "Your private CA configuration.",
                            "properties": {
                                "KeyAlgorithm": {
                                    "description": "Type of the public key algorithm and size, in bits, of the key pair that your key pair creates when it issues a certificate.",
                                    "enum": [
                                        "RSA_2048",
                                        "RSA_4096",
                                        "EC_prime256v1",
                                        "EC_secp384r1"
                                    ],
                                    "type": "string"
                                },
                                "SigningAlgorithm": {
                                    "description": "Name of the algorithm your private CA uses to sign certificate requests.",
                                    "enum": [
                                        "SHA256WITHECDSA",
                                        "SHA384WITHECDSA",
                                        "SHA512WITHECDSA",
                                        "SHA256WITHRSA",
                                        "SHA384WITHRSA",
                                        "SHA512WITHRSA"
                                    ],
                                    "type": "string"
                                },
                                "Subject": {
                                    "description": "Structure that contains X.500 distinguished name information for your private CA.",
                                    "properties": {
                                        "CommonName": {
                                            "description": "Fully qualified domain name (FQDN) associated with the certificate subject.",
                                            "maxLength": 64,
                                            "minLength": 0,
                                            "type": "string"
                                        },
                                        "Country": {
                                            "description": "Two-digit code that specifies the country in which the certificate subject located.",
                                            "pattern": "[A-Za-z]{2}",
                                            "type": "string"
                                        },
                                        "DistinguishedNameQualifier": {
                                            "description": "Disambiguating information for the certificate subject.",
                                            "maxLength": 64,
                                            "minLength": 0,
                                            "pattern": "[a-zA-Z0-9'()+-.?:/= ]*",
                                            "type": "string"
                                        },
                                        "GenerationQualifier": {
                                            "description": "Typically a qualifier appended to the name of an individual. Examples include Jr. for junior, Sr. for senior, and III for third.",
                                            "maxLength": 3,
                                            "minLength": 0,
                                            "type": "string"
                                        },
                                        "GivenName": {
                                            "description": "First name.",
                                            "maxLength": 16,
                                            "minLength": 0,
                                            "type": "string"
                                        },
                                        "Initials": {
                                            "description": "Concatenation that typically contains the first letter of the <b>GivenName</b>, the first letter of the middle name if one exists, and the first letter of the <b>SurName</b>.",
                                            "maxLength": 5,
                                            "minLength": 0,
                                            "type": "string"
                                        },
                                        "Locality": {
                                            "description": "The locality (such as a city or town) in which the certificate subject is located.",
                                            "maxLength": 128,
                                            "minLength": 0,
                                            "type": "string"
                                        },
                                        "Organization": {
                                            "description": "Legal name of the organization with which the certificate subject is affiliated. ",
                                            "maxLength": 64,
                                            "minLength": 0,
                                            "type": "string"
                                        },
                                        "OrganizationalUnit": {
                                            "description": "A subdivision or unit of the organization (such as sales or finance) with which the certificate subject is affiliated.",
                                            "maxLength": 64,
                                            "minLength": 0,
                                            "type": "string"
                                        },
                                        "Pseudonym": {
                                            "description": "Typically a shortened version of a longer <b>GivenName</b>. For example, Jonathan is often shortened to John. Elizabeth is often shortened to Beth, Liz, or Eliza.",
                                            "maxLength": 128,
                                            "minLength": 0,
                                            "type": "string"
                                        },
                                        "SerialNumber": {
                                            "description": "The certificate serial number.",
                                            "maxLength": 64,
                                            "minLength": 0,
                                            "type": "string"
                                        },
                                        "State": {
                                            "description": "State in which the subject of the certificate is located.",
                                            "maxLength": 128,
                                            "minLength": 0,
                                            "type": "string"
                                        },
                                        "Surname": {
                                            "description": "Family name. In the US and the UK, for example, the surname of an individual is ordered last. In Asian cultures the surname is typically ordered first.",
                                            "maxLength": 40,
                                            "minLength": 0,
                                            "type": "string"
                                        },
                                        "Title": {
                                            "description": "A title such as Mr. or Ms., which is pre-pended to the name to refer formally to the certificate subject.",
                                            "maxLength": 64,
                                            "minLength": 0,
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "required": [
                                "KeyAlgorithm",
                                "SigningAlgorithm",
                                "Subject"
                            ],
                            "type": "object"
                        },
                        "CreatedAt": {
                            "description": "Date and time at which your private CA was created.",
                            "format": "date-time",
                            "type": "string"
                        },
                        "FailureReason": {
                            "description": "Reason the request to create your private CA failed.",
                            "enum": [
                                "REQUEST_TIMED_OUT",
                                "UNSUPPORTED_ALGORITHM",
                                "OTHER"
                            ],
                            "type": "string"
                        },
                        "LastStateChangeAt": {
                            "description": "Date and time at which your private CA was last updated.",
                            "format": "date-time",
                            "type": "string"
                        },
                        "NotAfter": {
                            "description": "Date and time after which your private CA certificate is not valid.",
                            "format": "date-time",
                            "type": "string"
                        },
                        "NotBefore": {
                            "description": "Date and time before which your private CA certificate is not valid.",
                            "format": "date-time",
                            "type": "string"
                        },
                        "RestorableUntil": {
                            "description": "The period during which a deleted CA can be restored. For more information, see the <code>PermanentDeletionTimeInDays</code> parameter of the <a>DeleteCertificateAuthorityRequest</a> operation. ",
                            "format": "date-time",
                            "type": "string"
                        },
                        "RevocationConfiguration": {
                            "description": "Information about the certificate revocation list (CRL) created and maintained by your private CA. ",
                            "properties": {
                                "CrlConfiguration": {
                                    "description": "Configuration of the certificate revocation list (CRL), if any, maintained by your private CA.",
                                    "properties": {
                                        "CustomCname": {
                                            "description": "Name inserted into the certificate <b>CRL Distribution Points</b> extension that enables the use of an alias for the CRL distribution point. Use this value if you don't want the name of your S3 bucket to be public.",
                                            "maxLength": 253,
                                            "minLength": 0,
                                            "type": "string"
                                        },
                                        "Enabled": {
                                            "description": "Boolean value that specifies whether certificate revocation lists (CRLs) are enabled. You can use this value to enable certificate revocation for a new CA when you call the <a>CreateCertificateAuthority</a> operation or for an existing CA when you call the <a>UpdateCertificateAuthority</a> operation. ",
                                            "type": "boolean"
                                        },
                                        "ExpirationInDays": {
                                            "description": "Number of days until a certificate expires.",
                                            "maximum": 5000,
                                            "minimum": 1,
                                            "type": "integer"
                                        },
                                        "S3BucketName": {
                                            "description": "Name of the S3 bucket that contains the CRL. If you do not provide a value for the <b>CustomCname</b> argument, the name of your S3 bucket is placed into the <b>CRL Distribution Points</b> extension of the issued certificate. You can change the name of your bucket by calling the <a>UpdateCertificateAuthority</a> operation. You must specify a bucket policy that allows ACM PCA to write the CRL to your bucket.",
                                            "maxLength": 255,
                                            "minLength": 3,
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "Enabled"
                                    ],
                                    "type": "object"
                                }
                            },
                            "type": "object"
                        },
                        "Serial": {
                            "description": "Serial number of your private CA.",
                            "type": "string"
                        },
                        "Status": {
                            "description": "Status of your private CA.",
                            "enum": [
                                "CREATING",
                                "PENDING_CERTIFICATE",
                                "ACTIVE",
                                "DELETED",
                                "DISABLED",
                                "EXPIRED",
                                "FAILED"
                            ],
                            "type": "string"
                        },
                        "Type": {
                            "description": "Type of your private CA.",
                            "enum": [
                                "SUBORDINATE"
                            ],
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "CertificateAuthority": {
                "description": "Contains information about your private certificate authority (CA). Your private CA can issue and revoke X.509 digital certificates. Digital certificates verify that the entity named in the certificate <b>Subject</b> field owns or controls the public key contained in the <b>Subject Public Key Info</b> field. Call the <a>CreateCertificateAuthority</a> operation to create your private CA. You must then call the <a>GetCertificateAuthorityCertificate</a> operation to retrieve a private CA certificate signing request (CSR). Take the CSR to your on-premises CA and sign it with the root CA certificate or a subordinate certificate. Call the <a>ImportCertificateAuthorityCertificate</a> operation to import the signed certificate into AWS Certificate Manager (ACM). ",
                "properties": {
                    "Arn": {
                        "description": "Amazon Resource Name (ARN) for your private certificate authority (CA). The format is <code> <i>12345678-1234-1234-1234-123456789012</i> </code>.",
                        "maxLength": 200,
                        "minLength": 5,
                        "pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:[\\w+=/,.@-]*:[0-9]+:[\\w+=,.@-]+(/[\\w+=/,.@-]+)*",
                        "type": "string"
                    },
                    "CertificateAuthorityConfiguration": {
                        "description": "Your private CA configuration.",
                        "properties": {
                            "KeyAlgorithm": {
                                "description": "Type of the public key algorithm and size, in bits, of the key pair that your key pair creates when it issues a certificate.",
                                "enum": [
                                    "RSA_2048",
                                    "RSA_4096",
                                    "EC_prime256v1",
                                    "EC_secp384r1"
                                ],
                                "type": "string"
                            },
                            "SigningAlgorithm": {
                                "description": "Name of the algorithm your private CA uses to sign certificate requests.",
                                "enum": [
                                    "SHA256WITHECDSA",
                                    "SHA384WITHECDSA",
                                    "SHA512WITHECDSA",
                                    "SHA256WITHRSA",
                                    "SHA384WITHRSA",
                                    "SHA512WITHRSA"
                                ],
                                "type": "string"
                            },
                            "Subject": {
                                "description": "Structure that contains X.500 distinguished name information for your private CA.",
                                "properties": {
                                    "CommonName": {
                                        "description": "Fully qualified domain name (FQDN) associated with the certificate subject.",
                                        "maxLength": 64,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "Country": {
                                        "description": "Two-digit code that specifies the country in which the certificate subject located.",
                                        "pattern": "[A-Za-z]{2}",
                                        "type": "string"
                                    },
                                    "DistinguishedNameQualifier": {
                                        "description": "Disambiguating information for the certificate subject.",
                                        "maxLength": 64,
                                        "minLength": 0,
                                        "pattern": "[a-zA-Z0-9'()+-.?:/= ]*",
                                        "type": "string"
                                    },
                                    "GenerationQualifier": {
                                        "description": "Typically a qualifier appended to the name of an individual. Examples include Jr. for junior, Sr. for senior, and III for third.",
                                        "maxLength": 3,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "GivenName": {
                                        "description": "First name.",
                                        "maxLength": 16,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "Initials": {
                                        "description": "Concatenation that typically contains the first letter of the <b>GivenName</b>, the first letter of the middle name if one exists, and the first letter of the <b>SurName</b>.",
                                        "maxLength": 5,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "Locality": {
                                        "description": "The locality (such as a city or town) in which the certificate subject is located.",
                                        "maxLength": 128,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "Organization": {
                                        "description": "Legal name of the organization with which the certificate subject is affiliated. ",
                                        "maxLength": 64,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "OrganizationalUnit": {
                                        "description": "A subdivision or unit of the organization (such as sales or finance) with which the certificate subject is affiliated.",
                                        "maxLength": 64,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "Pseudonym": {
                                        "description": "Typically a shortened version of a longer <b>GivenName</b>. For example, Jonathan is often shortened to John. Elizabeth is often shortened to Beth, Liz, or Eliza.",
                                        "maxLength": 128,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "SerialNumber": {
                                        "description": "The certificate serial number.",
                                        "maxLength": 64,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "State": {
                                        "description": "State in which the subject of the certificate is located.",
                                        "maxLength": 128,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "Surname": {
                                        "description": "Family name. In the US and the UK, for example, the surname of an individual is ordered last. In Asian cultures the surname is typically ordered first.",
                                        "maxLength": 40,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "Title": {
                                        "description": "A title such as Mr. or Ms., which is pre-pended to the name to refer formally to the certificate subject.",
                                        "maxLength": 64,
                                        "minLength": 0,
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "required": [
                            "KeyAlgorithm",
                            "SigningAlgorithm",
                            "Subject"
                        ],
                        "type": "object"
                    },
                    "CreatedAt": {
                        "description": "Date and time at which your private CA was created.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "FailureReason": {
                        "description": "Reason the request to create your private CA failed.",
                        "enum": [
                            "REQUEST_TIMED_OUT",
                            "UNSUPPORTED_ALGORITHM",
                            "OTHER"
                        ],
                        "type": "string"
                    },
                    "LastStateChangeAt": {
                        "description": "Date and time at which your private CA was last updated.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "NotAfter": {
                        "description": "Date and time after which your private CA certificate is not valid.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "NotBefore": {
                        "description": "Date and time before which your private CA certificate is not valid.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "RestorableUntil": {
                        "description": "The period during which a deleted CA can be restored. For more information, see the <code>PermanentDeletionTimeInDays</code> parameter of the <a>DeleteCertificateAuthorityRequest</a> operation. ",
                        "format": "date-time",
                        "type": "string"
                    },
                    "RevocationConfiguration": {
                        "description": "Information about the certificate revocation list (CRL) created and maintained by your private CA. ",
                        "properties": {
                            "CrlConfiguration": {
                                "description": "Configuration of the certificate revocation list (CRL), if any, maintained by your private CA.",
                                "properties": {
                                    "CustomCname": {
                                        "description": "Name inserted into the certificate <b>CRL Distribution Points</b> extension that enables the use of an alias for the CRL distribution point. Use this value if you don't want the name of your S3 bucket to be public.",
                                        "maxLength": 253,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "Enabled": {
                                        "description": "Boolean value that specifies whether certificate revocation lists (CRLs) are enabled. You can use this value to enable certificate revocation for a new CA when you call the <a>CreateCertificateAuthority</a> operation or for an existing CA when you call the <a>UpdateCertificateAuthority</a> operation. ",
                                        "type": "boolean"
                                    },
                                    "ExpirationInDays": {
                                        "description": "Number of days until a certificate expires.",
                                        "maximum": 5000,
                                        "minimum": 1,
                                        "type": "integer"
                                    },
                                    "S3BucketName": {
                                        "description": "Name of the S3 bucket that contains the CRL. If you do not provide a value for the <b>CustomCname</b> argument, the name of your S3 bucket is placed into the <b>CRL Distribution Points</b> extension of the issued certificate. You can change the name of your bucket by calling the <a>UpdateCertificateAuthority</a> operation. You must specify a bucket policy that allows ACM PCA to write the CRL to your bucket.",
                                        "maxLength": 255,
                                        "minLength": 3,
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "Enabled"
                                ],
                                "type": "object"
                            }
                        },
                        "type": "object"
                    },
                    "Serial": {
                        "description": "Serial number of your private CA.",
                        "type": "string"
                    },
                    "Status": {
                        "description": "Status of your private CA.",
                        "enum": [
                            "CREATING",
                            "PENDING_CERTIFICATE",
                            "ACTIVE",
                            "DELETED",
                            "DISABLED",
                            "EXPIRED",
                            "FAILED"
                        ],
                        "type": "string"
                    },
                    "Type": {
                        "description": "Type of your private CA.",
                        "enum": [
                            "SUBORDINATE"
                        ],
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CertificateAuthorityConfiguration": {
                "description": "Contains configuration information for your private certificate authority (CA). This includes information about the class of public key algorithm and the key pair that your private CA creates when it issues a certificate, the signature algorithm it uses used when issuing certificates, and its X.500 distinguished name. You must specify this information when you call the <a>CreateCertificateAuthority</a> operation. ",
                "properties": {
                    "KeyAlgorithm": {
                        "description": "Type of the public key algorithm and size, in bits, of the key pair that your key pair creates when it issues a certificate.",
                        "enum": [
                            "RSA_2048",
                            "RSA_4096",
                            "EC_prime256v1",
                            "EC_secp384r1"
                        ],
                        "type": "string"
                    },
                    "SigningAlgorithm": {
                        "description": "Name of the algorithm your private CA uses to sign certificate requests.",
                        "enum": [
                            "SHA256WITHECDSA",
                            "SHA384WITHECDSA",
                            "SHA512WITHECDSA",
                            "SHA256WITHRSA",
                            "SHA384WITHRSA",
                            "SHA512WITHRSA"
                        ],
                        "type": "string"
                    },
                    "Subject": {
                        "description": "Structure that contains X.500 distinguished name information for your private CA.",
                        "properties": {
                            "CommonName": {
                                "description": "Fully qualified domain name (FQDN) associated with the certificate subject.",
                                "maxLength": 64,
                                "minLength": 0,
                                "type": "string"
                            },
                            "Country": {
                                "description": "Two-digit code that specifies the country in which the certificate subject located.",
                                "pattern": "[A-Za-z]{2}",
                                "type": "string"
                            },
                            "DistinguishedNameQualifier": {
                                "description": "Disambiguating information for the certificate subject.",
                                "maxLength": 64,
                                "minLength": 0,
                                "pattern": "[a-zA-Z0-9'()+-.?:/= ]*",
                                "type": "string"
                            },
                            "GenerationQualifier": {
                                "description": "Typically a qualifier appended to the name of an individual. Examples include Jr. for junior, Sr. for senior, and III for third.",
                                "maxLength": 3,
                                "minLength": 0,
                                "type": "string"
                            },
                            "GivenName": {
                                "description": "First name.",
                                "maxLength": 16,
                                "minLength": 0,
                                "type": "string"
                            },
                            "Initials": {
                                "description": "Concatenation that typically contains the first letter of the <b>GivenName</b>, the first letter of the middle name if one exists, and the first letter of the <b>SurName</b>.",
                                "maxLength": 5,
                                "minLength": 0,
                                "type": "string"
                            },
                            "Locality": {
                                "description": "The locality (such as a city or town) in which the certificate subject is located.",
                                "maxLength": 128,
                                "minLength": 0,
                                "type": "string"
                            },
                            "Organization": {
                                "description": "Legal name of the organization with which the certificate subject is affiliated. ",
                                "maxLength": 64,
                                "minLength": 0,
                                "type": "string"
                            },
                            "OrganizationalUnit": {
                                "description": "A subdivision or unit of the organization (such as sales or finance) with which the certificate subject is affiliated.",
                                "maxLength": 64,
                                "minLength": 0,
                                "type": "string"
                            },
                            "Pseudonym": {
                                "description": "Typically a shortened version of a longer <b>GivenName</b>. For example, Jonathan is often shortened to John. Elizabeth is often shortened to Beth, Liz, or Eliza.",
                                "maxLength": 128,
                                "minLength": 0,
                                "type": "string"
                            },
                            "SerialNumber": {
                                "description": "The certificate serial number.",
                                "maxLength": 64,
                                "minLength": 0,
                                "type": "string"
                            },
                            "State": {
                                "description": "State in which the subject of the certificate is located.",
                                "maxLength": 128,
                                "minLength": 0,
                                "type": "string"
                            },
                            "Surname": {
                                "description": "Family name. In the US and the UK, for example, the surname of an individual is ordered last. In Asian cultures the surname is typically ordered first.",
                                "maxLength": 40,
                                "minLength": 0,
                                "type": "string"
                            },
                            "Title": {
                                "description": "A title such as Mr. or Ms., which is pre-pended to the name to refer formally to the certificate subject.",
                                "maxLength": 64,
                                "minLength": 0,
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "required": [
                    "KeyAlgorithm",
                    "SigningAlgorithm",
                    "Subject"
                ],
                "type": "object"
            },
            "CertificateAuthorityStatus": {
                "enum": [
                    "CREATING",
                    "PENDING_CERTIFICATE",
                    "ACTIVE",
                    "DELETED",
                    "DISABLED",
                    "EXPIRED",
                    "FAILED"
                ],
                "type": "string"
            },
            "CertificateAuthorityType": {
                "enum": [
                    "SUBORDINATE"
                ],
                "type": "string"
            },
            "CertificateBody": {
                "type": "string"
            },
            "CertificateBodyBlob": {
                "maxLength": 32768,
                "minLength": 1,
                "type": "string"
            },
            "CertificateChain": {
                "type": "string"
            },
            "CertificateChainBlob": {
                "maxLength": 2097152,
                "minLength": 0,
                "type": "string"
            },
            "CertificateMismatchException": {},
            "ConcurrentModificationException": {},
            "CountryCodeString": {
                "pattern": "[A-Za-z]{2}",
                "type": "string"
            },
            "CreateCertificateAuthorityAuditReportRequest": {
                "properties": {
                    "AuditReportResponseFormat": {
                        "description": "Format in which to create the report. This can be either <b>JSON</b> or <b>CSV</b>.",
                        "enum": [
                            "JSON",
                            "CSV"
                        ],
                        "type": "string"
                    },
                    "CertificateAuthorityArn": {
                        "description": "<p>Amazon Resource Name (ARN) of the CA to be audited. This is of the form:</p> <p> <code>arn:aws:acm-pca:<i>region</i>:<i>account</i>:certificate-authority/<i>12345678-1234-1234-1234-123456789012</i> </code>.</p>",
                        "maxLength": 200,
                        "minLength": 5,
                        "pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:[\\w+=/,.@-]*:[0-9]+:[\\w+=,.@-]+(/[\\w+=/,.@-]+)*",
                        "type": "string"
                    },
                    "S3BucketName": {
                        "description": "Name of the S3 bucket that will contain the audit report.",
                        "type": "string"
                    }
                },
                "required": [
                    "CertificateAuthorityArn",
                    "S3BucketName",
                    "AuditReportResponseFormat"
                ],
                "type": "object"
            },
            "CreateCertificateAuthorityAuditReportResponse": {
                "properties": {
                    "AuditReportId": {
                        "description": "An alphanumeric string that contains a report identifier.",
                        "maxLength": 36,
                        "minLength": 36,
                        "pattern": "[a-z0-9]{8}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{12}",
                        "type": "string"
                    },
                    "S3Key": {
                        "description": "The <b>key</b> that uniquely identifies the report file in your S3 bucket.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CreateCertificateAuthorityRequest": {
                "properties": {
                    "CertificateAuthorityConfiguration": {
                        "description": "Name and bit size of the private key algorithm, the name of the signing algorithm, and X.500 certificate subject information.",
                        "properties": {
                            "KeyAlgorithm": {
                                "description": "Type of the public key algorithm and size, in bits, of the key pair that your key pair creates when it issues a certificate.",
                                "enum": [
                                    "RSA_2048",
                                    "RSA_4096",
                                    "EC_prime256v1",
                                    "EC_secp384r1"
                                ],
                                "type": "string"
                            },
                            "SigningAlgorithm": {
                                "description": "Name of the algorithm your private CA uses to sign certificate requests.",
                                "enum": [
                                    "SHA256WITHECDSA",
                                    "SHA384WITHECDSA",
                                    "SHA512WITHECDSA",
                                    "SHA256WITHRSA",
                                    "SHA384WITHRSA",
                                    "SHA512WITHRSA"
                                ],
                                "type": "string"
                            },
                            "Subject": {
                                "description": "Structure that contains X.500 distinguished name information for your private CA.",
                                "properties": {
                                    "CommonName": {
                                        "description": "Fully qualified domain name (FQDN) associated with the certificate subject.",
                                        "maxLength": 64,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "Country": {
                                        "description": "Two-digit code that specifies the country in which the certificate subject located.",
                                        "pattern": "[A-Za-z]{2}",
                                        "type": "string"
                                    },
                                    "DistinguishedNameQualifier": {
                                        "description": "Disambiguating information for the certificate subject.",
                                        "maxLength": 64,
                                        "minLength": 0,
                                        "pattern": "[a-zA-Z0-9'()+-.?:/= ]*",
                                        "type": "string"
                                    },
                                    "GenerationQualifier": {
                                        "description": "Typically a qualifier appended to the name of an individual. Examples include Jr. for junior, Sr. for senior, and III for third.",
                                        "maxLength": 3,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "GivenName": {
                                        "description": "First name.",
                                        "maxLength": 16,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "Initials": {
                                        "description": "Concatenation that typically contains the first letter of the <b>GivenName</b>, the first letter of the middle name if one exists, and the first letter of the <b>SurName</b>.",
                                        "maxLength": 5,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "Locality": {
                                        "description": "The locality (such as a city or town) in which the certificate subject is located.",
                                        "maxLength": 128,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "Organization": {
                                        "description": "Legal name of the organization with which the certificate subject is affiliated. ",
                                        "maxLength": 64,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "OrganizationalUnit": {
                                        "description": "A subdivision or unit of the organization (such as sales or finance) with which the certificate subject is affiliated.",
                                        "maxLength": 64,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "Pseudonym": {
                                        "description": "Typically a shortened version of a longer <b>GivenName</b>. For example, Jonathan is often shortened to John. Elizabeth is often shortened to Beth, Liz, or Eliza.",
                                        "maxLength": 128,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "SerialNumber": {
                                        "description": "The certificate serial number.",
                                        "maxLength": 64,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "State": {
                                        "description": "State in which the subject of the certificate is located.",
                                        "maxLength": 128,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "Surname": {
                                        "description": "Family name. In the US and the UK, for example, the surname of an individual is ordered last. In Asian cultures the surname is typically ordered first.",
                                        "maxLength": 40,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "Title": {
                                        "description": "A title such as Mr. or Ms., which is pre-pended to the name to refer formally to the certificate subject.",
                                        "maxLength": 64,
                                        "minLength": 0,
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "required": [
                            "KeyAlgorithm",
                            "SigningAlgorithm",
                            "Subject"
                        ],
                        "type": "object"
                    },
                    "CertificateAuthorityType": {
                        "description": "The type of the certificate authority. Currently, this must be <b>SUBORDINATE</b>.",
                        "enum": [
                            "SUBORDINATE"
                        ],
                        "type": "string"
                    },
                    "IdempotencyToken": {
                        "description": "Alphanumeric string that can be used to distinguish between calls to <b>CreateCertificateAuthority</b>. Idempotency tokens time out after five minutes. Therefore, if you call <b>CreateCertificateAuthority</b> multiple times with the same idempotency token within a five minute period, ACM PCA recognizes that you are requesting only one certificate. As a result, ACM PCA issues only one. If you change the idempotency token for each call, however, ACM PCA recognizes that you are requesting multiple certificates.",
                        "maxLength": 36,
                        "minLength": 1,
                        "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u00FF]*",
                        "type": "string"
                    },
                    "RevocationConfiguration": {
                        "description": "Contains a Boolean value that you can use to enable a certification revocation list (CRL) for the CA, the name of the S3 bucket to which ACM PCA will write the CRL, and an optional CNAME alias that you can use to hide the name of your bucket in the <b>CRL Distribution Points</b> extension of your CA certificate. For more information, see the <a>CrlConfiguration</a> structure. ",
                        "properties": {
                            "CrlConfiguration": {
                                "description": "Configuration of the certificate revocation list (CRL), if any, maintained by your private CA.",
                                "properties": {
                                    "CustomCname": {
                                        "description": "Name inserted into the certificate <b>CRL Distribution Points</b> extension that enables the use of an alias for the CRL distribution point. Use this value if you don't want the name of your S3 bucket to be public.",
                                        "maxLength": 253,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "Enabled": {
                                        "description": "Boolean value that specifies whether certificate revocation lists (CRLs) are enabled. You can use this value to enable certificate revocation for a new CA when you call the <a>CreateCertificateAuthority</a> operation or for an existing CA when you call the <a>UpdateCertificateAuthority</a> operation. ",
                                        "type": "boolean"
                                    },
                                    "ExpirationInDays": {
                                        "description": "Number of days until a certificate expires.",
                                        "maximum": 5000,
                                        "minimum": 1,
                                        "type": "integer"
                                    },
                                    "S3BucketName": {
                                        "description": "Name of the S3 bucket that contains the CRL. If you do not provide a value for the <b>CustomCname</b> argument, the name of your S3 bucket is placed into the <b>CRL Distribution Points</b> extension of the issued certificate. You can change the name of your bucket by calling the <a>UpdateCertificateAuthority</a> operation. You must specify a bucket policy that allows ACM PCA to write the CRL to your bucket.",
                                        "maxLength": 255,
                                        "minLength": 3,
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "Enabled"
                                ],
                                "type": "object"
                            }
                        },
                        "type": "object"
                    },
                    "Tags": {
                        "description": "Key-value pairs that will be attached to the new private CA. You can associate up to 50 tags with a private CA.",
                        "items": {
                            "description": "Tags are labels that you can use to identify and organize your private CAs. Each tag consists of a key and an optional value. You can associate up to 50 tags with a private CA. To add one or more tags to a private CA, call the <a>TagCertificateAuthority</a> operation. To remove a tag, call the <a>UntagCertificateAuthority</a> operation. ",
                            "properties": {
                                "Key": {
                                    "description": "Key (name) of the tag.",
                                    "maxLength": 128,
                                    "minLength": 1,
                                    "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                                    "type": "string"
                                },
                                "Value": {
                                    "description": "Value of the tag.",
                                    "maxLength": 256,
                                    "minLength": 0,
                                    "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "Key"
                            ],
                            "type": "object"
                        },
                        "maxItems": 50,
                        "minItems": 1,
                        "type": "array"
                    }
                },
                "required": [
                    "CertificateAuthorityConfiguration",
                    "CertificateAuthorityType"
                ],
                "type": "object"
            },
            "CreateCertificateAuthorityResponse": {
                "properties": {
                    "CertificateAuthorityArn": {
                        "description": "<p>If successful, the Amazon Resource Name (ARN) of the certificate authority (CA). This is of the form: </p> <p> <code>arn:aws:acm-pca:<i>region</i>:<i>account</i>:certificate-authority/<i>12345678-1234-1234-1234-123456789012</i> </code>. </p>",
                        "maxLength": 200,
                        "minLength": 5,
                        "pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:[\\w+=/,.@-]*:[0-9]+:[\\w+=,.@-]+(/[\\w+=/,.@-]+)*",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CrlConfiguration": {
                "description": "<p>Contains configuration information for a certificate revocation list (CRL). Your private certificate authority (CA) creates base CRLs. Delta CRLs are not supported. You can enable CRLs for your new or an existing private CA by setting the <b>Enabled</b> parameter to <code>true</code>. Your private CA writes CRLs to an S3 bucket that you specify in the <b>S3BucketName</b> parameter. You can hide the name of your bucket by specifying a value for the <b>CustomCname</b> parameter. Your private CA copies the CNAME or the S3 bucket name to the <b>CRL Distribution Points</b> extension of each certificate it issues. Your S3 bucket policy must give write permission to ACM PCA. </p> <p>Your private CA uses the value in the <b>ExpirationInDays</b> parameter to calculate the <b>nextUpdate</b> field in the CRL. The CRL is refreshed at 1/2 the age of next update or when a certificate is revoked. When a certificate is revoked, it is recorded in the next CRL that is generated and in the next audit report. Only time valid certificates are listed in the CRL. Expired certificates are not included. </p> <p>CRLs contain the following fields:</p> <ul> <li> <p> <b>Version</b>: The current version number defined in RFC 5280 is V2. The integer value is 0x1. </p> </li> <li> <p> <b>Signature Algorithm</b>: The name of the algorithm used to sign the CRL.</p> </li> <li> <p> <b>Issuer</b>: The X.500 distinguished name of your private CA that issued the CRL.</p> </li> <li> <p> <b>Last Update</b>: The issue date and time of this CRL.</p> </li> <li> <p> <b>Next Update</b>: The day and time by which the next CRL will be issued.</p> </li> <li> <p> <b>Revoked Certificates</b>: List of revoked certificates. Each list item contains the following information.</p> <ul> <li> <p> <b>Serial Number</b>: The serial number, in hexadecimal format, of the revoked certificate.</p> </li> <li> <p> <b>Revocation Date</b>: Date and time the certificate was revoked.</p> </li> <li> <p> <b>CRL Entry Extensions</b>: Optional extensions for the CRL entry.</p> <ul> <li> <p> <b>X509v3 CRL Reason Code</b>: Reason the certificate was revoked.</p> </li> </ul> </li> </ul> </li> <li> <p> <b>CRL Extensions</b>: Optional extensions for the CRL.</p> <ul> <li> <p> <b>X509v3 Authority Key Identifier</b>: Identifies the public key associated with the private key used to sign the certificate.</p> </li> <li> <p> <b>X509v3 CRL Number:</b>: Decimal sequence number for the CRL.</p> </li> </ul> </li> <li> <p> <b>Signature Algorithm</b>: Algorithm used by your private CA to sign the CRL.</p> </li> <li> <p> <b>Signature Value</b>: Signature computed over the CRL.</p> </li> </ul> <p>Certificate revocation lists created by ACM PCA are DER-encoded. You can use the following OpenSSL command to list a CRL.</p> <p> <code>openssl crl -inform DER -text -in <i>crl_path</i> -noout</code> </p>",
                "properties": {
                    "CustomCname": {
                        "description": "Name inserted into the certificate <b>CRL Distribution Points</b> extension that enables the use of an alias for the CRL distribution point. Use this value if you don't want the name of your S3 bucket to be public.",
                        "maxLength": 253,
                        "minLength": 0,
                        "type": "string"
                    },
                    "Enabled": {
                        "description": "Boolean value that specifies whether certificate revocation lists (CRLs) are enabled. You can use this value to enable certificate revocation for a new CA when you call the <a>CreateCertificateAuthority</a> operation or for an existing CA when you call the <a>UpdateCertificateAuthority</a> operation. ",
                        "type": "boolean"
                    },
                    "ExpirationInDays": {
                        "description": "Number of days until a certificate expires.",
                        "maximum": 5000,
                        "minimum": 1,
                        "type": "integer"
                    },
                    "S3BucketName": {
                        "description": "Name of the S3 bucket that contains the CRL. If you do not provide a value for the <b>CustomCname</b> argument, the name of your S3 bucket is placed into the <b>CRL Distribution Points</b> extension of the issued certificate. You can change the name of your bucket by calling the <a>UpdateCertificateAuthority</a> operation. You must specify a bucket policy that allows ACM PCA to write the CRL to your bucket.",
                        "maxLength": 255,
                        "minLength": 3,
                        "type": "string"
                    }
                },
                "required": [
                    "Enabled"
                ],
                "type": "object"
            },
            "CsrBlob": {
                "maxLength": 32768,
                "minLength": 1,
                "type": "string"
            },
            "CsrBody": {
                "type": "string"
            },
            "DeleteCertificateAuthorityRequest": {
                "properties": {
                    "CertificateAuthorityArn": {
                        "description": "<p>The Amazon Resource Name (ARN) that was returned when you called <a>CreateCertificateAuthority</a>. This must have the following form: </p> <p> <code>arn:aws:acm-pca:<i>region</i>:<i>account</i>:certificate-authority/<i>12345678-1234-1234-1234-123456789012</i> </code>. </p>",
                        "maxLength": 200,
                        "minLength": 5,
                        "pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:[\\w+=/,.@-]*:[0-9]+:[\\w+=,.@-]+(/[\\w+=/,.@-]+)*",
                        "type": "string"
                    },
                    "PermanentDeletionTimeInDays": {
                        "description": "The number of days to make a CA restorable after it has been deleted. This can be anywhere from 7 to 30 days, with 30 being the default.",
                        "maximum": 30,
                        "minimum": 7,
                        "type": "integer"
                    }
                },
                "required": [
                    "CertificateAuthorityArn"
                ],
                "type": "object"
            },
            "DescribeCertificateAuthorityAuditReportRequest": {
                "properties": {
                    "AuditReportId": {
                        "description": "The report ID returned by calling the <a>CreateCertificateAuthorityAuditReport</a> operation.",
                        "maxLength": 36,
                        "minLength": 36,
                        "pattern": "[a-z0-9]{8}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{12}",
                        "type": "string"
                    },
                    "CertificateAuthorityArn": {
                        "description": "<p>The Amazon Resource Name (ARN) of the private CA. This must be of the form:</p> <p> <code>arn:aws:acm-pca:<i>region</i>:<i>account</i>:certificate-authority/<i>12345678-1234-1234-1234-123456789012</i> </code>. </p>",
                        "maxLength": 200,
                        "minLength": 5,
                        "pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:[\\w+=/,.@-]*:[0-9]+:[\\w+=,.@-]+(/[\\w+=/,.@-]+)*",
                        "type": "string"
                    }
                },
                "required": [
                    "CertificateAuthorityArn",
                    "AuditReportId"
                ],
                "type": "object"
            },
            "DescribeCertificateAuthorityAuditReportResponse": {
                "properties": {
                    "AuditReportStatus": {
                        "description": "Specifies whether report creation is in progress, has succeeded, or has failed.",
                        "enum": [
                            "CREATING",
                            "SUCCESS",
                            "FAILED"
                        ],
                        "type": "string"
                    },
                    "CreatedAt": {
                        "description": "The date and time at which the report was created.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "S3BucketName": {
                        "description": "Name of the S3 bucket that contains the report.",
                        "type": "string"
                    },
                    "S3Key": {
                        "description": "S3 <b>key</b> that uniquely identifies the report file in your S3 bucket.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "DescribeCertificateAuthorityRequest": {
                "properties": {
                    "CertificateAuthorityArn": {
                        "description": "<p>The Amazon Resource Name (ARN) that was returned when you called <a>CreateCertificateAuthority</a>. This must be of the form: </p> <p> <code>arn:aws:acm-pca:<i>region</i>:<i>account</i>:certificate-authority/<i>12345678-1234-1234-1234-123456789012</i> </code>. </p>",
                        "maxLength": 200,
                        "minLength": 5,
                        "pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:[\\w+=/,.@-]*:[0-9]+:[\\w+=,.@-]+(/[\\w+=/,.@-]+)*",
                        "type": "string"
                    }
                },
                "required": [
                    "CertificateAuthorityArn"
                ],
                "type": "object"
            },
            "DescribeCertificateAuthorityResponse": {
                "properties": {
                    "CertificateAuthority": {
                        "description": "A <a>CertificateAuthority</a> structure that contains information about your private CA.",
                        "properties": {
                            "Arn": {
                                "description": "Amazon Resource Name (ARN) for your private certificate authority (CA). The format is <code> <i>12345678-1234-1234-1234-123456789012</i> </code>.",
                                "maxLength": 200,
                                "minLength": 5,
                                "pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:[\\w+=/,.@-]*:[0-9]+:[\\w+=,.@-]+(/[\\w+=/,.@-]+)*",
                                "type": "string"
                            },
                            "CertificateAuthorityConfiguration": {
                                "description": "Your private CA configuration.",
                                "properties": {
                                    "KeyAlgorithm": {
                                        "description": "Type of the public key algorithm and size, in bits, of the key pair that your key pair creates when it issues a certificate.",
                                        "enum": [
                                            "RSA_2048",
                                            "RSA_4096",
                                            "EC_prime256v1",
                                            "EC_secp384r1"
                                        ],
                                        "type": "string"
                                    },
                                    "SigningAlgorithm": {
                                        "description": "Name of the algorithm your private CA uses to sign certificate requests.",
                                        "enum": [
                                            "SHA256WITHECDSA",
                                            "SHA384WITHECDSA",
                                            "SHA512WITHECDSA",
                                            "SHA256WITHRSA",
                                            "SHA384WITHRSA",
                                            "SHA512WITHRSA"
                                        ],
                                        "type": "string"
                                    },
                                    "Subject": {
                                        "description": "Structure that contains X.500 distinguished name information for your private CA.",
                                        "properties": {
                                            "CommonName": {
                                                "description": "Fully qualified domain name (FQDN) associated with the certificate subject.",
                                                "maxLength": 64,
                                                "minLength": 0,
                                                "type": "string"
                                            },
                                            "Country": {
                                                "description": "Two-digit code that specifies the country in which the certificate subject located.",
                                                "pattern": "[A-Za-z]{2}",
                                                "type": "string"
                                            },
                                            "DistinguishedNameQualifier": {
                                                "description": "Disambiguating information for the certificate subject.",
                                                "maxLength": 64,
                                                "minLength": 0,
                                                "pattern": "[a-zA-Z0-9'()+-.?:/= ]*",
                                                "type": "string"
                                            },
                                            "GenerationQualifier": {
                                                "description": "Typically a qualifier appended to the name of an individual. Examples include Jr. for junior, Sr. for senior, and III for third.",
                                                "maxLength": 3,
                                                "minLength": 0,
                                                "type": "string"
                                            },
                                            "GivenName": {
                                                "description": "First name.",
                                                "maxLength": 16,
                                                "minLength": 0,
                                                "type": "string"
                                            },
                                            "Initials": {
                                                "description": "Concatenation that typically contains the first letter of the <b>GivenName</b>, the first letter of the middle name if one exists, and the first letter of the <b>SurName</b>.",
                                                "maxLength": 5,
                                                "minLength": 0,
                                                "type": "string"
                                            },
                                            "Locality": {
                                                "description": "The locality (such as a city or town) in which the certificate subject is located.",
                                                "maxLength": 128,
                                                "minLength": 0,
                                                "type": "string"
                                            },
                                            "Organization": {
                                                "description": "Legal name of the organization with which the certificate subject is affiliated. ",
                                                "maxLength": 64,
                                                "minLength": 0,
                                                "type": "string"
                                            },
                                            "OrganizationalUnit": {
                                                "description": "A subdivision or unit of the organization (such as sales or finance) with which the certificate subject is affiliated.",
                                                "maxLength": 64,
                                                "minLength": 0,
                                                "type": "string"
                                            },
                                            "Pseudonym": {
                                                "description": "Typically a shortened version of a longer <b>GivenName</b>. For example, Jonathan is often shortened to John. Elizabeth is often shortened to Beth, Liz, or Eliza.",
                                                "maxLength": 128,
                                                "minLength": 0,
                                                "type": "string"
                                            },
                                            "SerialNumber": {
                                                "description": "The certificate serial number.",
                                                "maxLength": 64,
                                                "minLength": 0,
                                                "type": "string"
                                            },
                                            "State": {
                                                "description": "State in which the subject of the certificate is located.",
                                                "maxLength": 128,
                                                "minLength": 0,
                                                "type": "string"
                                            },
                                            "Surname": {
                                                "description": "Family name. In the US and the UK, for example, the surname of an individual is ordered last. In Asian cultures the surname is typically ordered first.",
                                                "maxLength": 40,
                                                "minLength": 0,
                                                "type": "string"
                                            },
                                            "Title": {
                                                "description": "A title such as Mr. or Ms., which is pre-pended to the name to refer formally to the certificate subject.",
                                                "maxLength": 64,
                                                "minLength": 0,
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "required": [
                                    "KeyAlgorithm",
                                    "SigningAlgorithm",
                                    "Subject"
                                ],
                                "type": "object"
                            },
                            "CreatedAt": {
                                "description": "Date and time at which your private CA was created.",
                                "format": "date-time",
                                "type": "string"
                            },
                            "FailureReason": {
                                "description": "Reason the request to create your private CA failed.",
                                "enum": [
                                    "REQUEST_TIMED_OUT",
                                    "UNSUPPORTED_ALGORITHM",
                                    "OTHER"
                                ],
                                "type": "string"
                            },
                            "LastStateChangeAt": {
                                "description": "Date and time at which your private CA was last updated.",
                                "format": "date-time",
                                "type": "string"
                            },
                            "NotAfter": {
                                "description": "Date and time after which your private CA certificate is not valid.",
                                "format": "date-time",
                                "type": "string"
                            },
                            "NotBefore": {
                                "description": "Date and time before which your private CA certificate is not valid.",
                                "format": "date-time",
                                "type": "string"
                            },
                            "RestorableUntil": {
                                "description": "The period during which a deleted CA can be restored. For more information, see the <code>PermanentDeletionTimeInDays</code> parameter of the <a>DeleteCertificateAuthorityRequest</a> operation. ",
                                "format": "date-time",
                                "type": "string"
                            },
                            "RevocationConfiguration": {
                                "description": "Information about the certificate revocation list (CRL) created and maintained by your private CA. ",
                                "properties": {
                                    "CrlConfiguration": {
                                        "description": "Configuration of the certificate revocation list (CRL), if any, maintained by your private CA.",
                                        "properties": {
                                            "CustomCname": {
                                                "description": "Name inserted into the certificate <b>CRL Distribution Points</b> extension that enables the use of an alias for the CRL distribution point. Use this value if you don't want the name of your S3 bucket to be public.",
                                                "maxLength": 253,
                                                "minLength": 0,
                                                "type": "string"
                                            },
                                            "Enabled": {
                                                "description": "Boolean value that specifies whether certificate revocation lists (CRLs) are enabled. You can use this value to enable certificate revocation for a new CA when you call the <a>CreateCertificateAuthority</a> operation or for an existing CA when you call the <a>UpdateCertificateAuthority</a> operation. ",
                                                "type": "boolean"
                                            },
                                            "ExpirationInDays": {
                                                "description": "Number of days until a certificate expires.",
                                                "maximum": 5000,
                                                "minimum": 1,
                                                "type": "integer"
                                            },
                                            "S3BucketName": {
                                                "description": "Name of the S3 bucket that contains the CRL. If you do not provide a value for the <b>CustomCname</b> argument, the name of your S3 bucket is placed into the <b>CRL Distribution Points</b> extension of the issued certificate. You can change the name of your bucket by calling the <a>UpdateCertificateAuthority</a> operation. You must specify a bucket policy that allows ACM PCA to write the CRL to your bucket.",
                                                "maxLength": 255,
                                                "minLength": 3,
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "Enabled"
                                        ],
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            },
                            "Serial": {
                                "description": "Serial number of your private CA.",
                                "type": "string"
                            },
                            "Status": {
                                "description": "Status of your private CA.",
                                "enum": [
                                    "CREATING",
                                    "PENDING_CERTIFICATE",
                                    "ACTIVE",
                                    "DELETED",
                                    "DISABLED",
                                    "EXPIRED",
                                    "FAILED"
                                ],
                                "type": "string"
                            },
                            "Type": {
                                "description": "Type of your private CA.",
                                "enum": [
                                    "SUBORDINATE"
                                ],
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "DistinguishedNameQualifierString": {
                "maxLength": 64,
                "minLength": 0,
                "pattern": "[a-zA-Z0-9'()+-.?:/= ]*",
                "type": "string"
            },
            "FailureReason": {
                "enum": [
                    "REQUEST_TIMED_OUT",
                    "UNSUPPORTED_ALGORITHM",
                    "OTHER"
                ],
                "type": "string"
            },
            "GetCertificateAuthorityCertificateRequest": {
                "properties": {
                    "CertificateAuthorityArn": {
                        "description": "<p>The Amazon Resource Name (ARN) of your private CA. This is of the form:</p> <p> <code>arn:aws:acm-pca:<i>region</i>:<i>account</i>:certificate-authority/<i>12345678-1234-1234-1234-123456789012</i> </code>. </p>",
                        "maxLength": 200,
                        "minLength": 5,
                        "pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:[\\w+=/,.@-]*:[0-9]+:[\\w+=,.@-]+(/[\\w+=/,.@-]+)*",
                        "type": "string"
                    }
                },
                "required": [
                    "CertificateAuthorityArn"
                ],
                "type": "object"
            },
            "GetCertificateAuthorityCertificateResponse": {
                "properties": {
                    "Certificate": {
                        "description": "Base64-encoded certificate authority (CA) certificate.",
                        "type": "string"
                    },
                    "CertificateChain": {
                        "description": "Base64-encoded certificate chain that includes any intermediate certificates and chains up to root on-premises certificate that you used to sign your private CA certificate. The chain does not include your private CA certificate. ",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "GetCertificateAuthorityCsrRequest": {
                "properties": {
                    "CertificateAuthorityArn": {
                        "description": "<p>The Amazon Resource Name (ARN) that was returned when you called the <a>CreateCertificateAuthority</a> operation. This must be of the form: </p> <p> <code>arn:aws:acm-pca:<i>region</i>:<i>account</i>:certificate-authority/<i>12345678-1234-1234-1234-123456789012</i> </code> </p>",
                        "maxLength": 200,
                        "minLength": 5,
                        "pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:[\\w+=/,.@-]*:[0-9]+:[\\w+=,.@-]+(/[\\w+=/,.@-]+)*",
                        "type": "string"
                    }
                },
                "required": [
                    "CertificateAuthorityArn"
                ],
                "type": "object"
            },
            "GetCertificateAuthorityCsrResponse": {
                "properties": {
                    "Csr": {
                        "description": "The base64 PEM-encoded certificate signing request (CSR) for your private CA certificate.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "GetCertificateRequest": {
                "properties": {
                    "CertificateArn": {
                        "description": "<p>The ARN of the issued certificate. The ARN contains the certificate serial number and must be in the following form: </p> <p> <code>arn:aws:acm-pca:<i>region</i>:<i>account</i>:certificate-authority/<i>12345678-1234-1234-1234-123456789012</i>/certificate/<i>286535153982981100925020015808220737245</i> </code> </p>",
                        "maxLength": 200,
                        "minLength": 5,
                        "pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:[\\w+=/,.@-]*:[0-9]+:[\\w+=,.@-]+(/[\\w+=/,.@-]+)*",
                        "type": "string"
                    },
                    "CertificateAuthorityArn": {
                        "description": "<p>The Amazon Resource Name (ARN) that was returned when you called <a>CreateCertificateAuthority</a>. This must be of the form: </p> <p> <code>arn:aws:acm-pca:<i>region</i>:<i>account</i>:certificate-authority/<i>12345678-1234-1234-1234-123456789012</i> </code>. </p>",
                        "maxLength": 200,
                        "minLength": 5,
                        "pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:[\\w+=/,.@-]*:[0-9]+:[\\w+=,.@-]+(/[\\w+=/,.@-]+)*",
                        "type": "string"
                    }
                },
                "required": [
                    "CertificateAuthorityArn",
                    "CertificateArn"
                ],
                "type": "object"
            },
            "GetCertificateResponse": {
                "properties": {
                    "Certificate": {
                        "description": "The base64 PEM-encoded certificate specified by the <code>CertificateArn</code> parameter.",
                        "type": "string"
                    },
                    "CertificateChain": {
                        "description": "The base64 PEM-encoded certificate chain that chains up to the on-premises root CA certificate that you used to sign your private CA certificate. ",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "IdempotencyToken": {
                "maxLength": 36,
                "minLength": 1,
                "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u00FF]*",
                "type": "string"
            },
            "ImportCertificateAuthorityCertificateRequest": {
                "properties": {
                    "Certificate": {
                        "description": "The PEM-encoded certificate for your private CA. This must be signed by using your on-premises CA.",
                        "maxLength": 32768,
                        "minLength": 1,
                        "type": "string"
                    },
                    "CertificateAuthorityArn": {
                        "description": "<p>The Amazon Resource Name (ARN) that was returned when you called <a>CreateCertificateAuthority</a>. This must be of the form: </p> <p> <code>arn:aws:acm-pca:<i>region</i>:<i>account</i>:certificate-authority/<i>12345678-1234-1234-1234-123456789012</i> </code> </p>",
                        "maxLength": 200,
                        "minLength": 5,
                        "pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:[\\w+=/,.@-]*:[0-9]+:[\\w+=,.@-]+(/[\\w+=/,.@-]+)*",
                        "type": "string"
                    },
                    "CertificateChain": {
                        "description": "A PEM-encoded file that contains all of your certificates, other than the certificate you're importing, chaining up to your root CA. Your on-premises root certificate is the last in the chain, and each certificate in the chain signs the one preceding. ",
                        "maxLength": 2097152,
                        "minLength": 0,
                        "type": "string"
                    }
                },
                "required": [
                    "CertificateAuthorityArn",
                    "Certificate",
                    "CertificateChain"
                ],
                "type": "object"
            },
            "Integer1To5000": {
                "maximum": 5000,
                "minimum": 1,
                "type": "integer"
            },
            "InvalidArgsException": {},
            "InvalidArnException": {},
            "InvalidNextTokenException": {},
            "InvalidPolicyException": {},
            "InvalidStateException": {},
            "InvalidTagException": {},
            "IssueCertificateRequest": {
                "properties": {
                    "CertificateAuthorityArn": {
                        "description": "<p>The Amazon Resource Name (ARN) that was returned when you called <a>CreateCertificateAuthority</a>. This must be of the form:</p> <p> <code>arn:aws:acm-pca:<i>region</i>:<i>account</i>:certificate-authority/<i>12345678-1234-1234-1234-123456789012</i> </code> </p>",
                        "maxLength": 200,
                        "minLength": 5,
                        "pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:[\\w+=/,.@-]*:[0-9]+:[\\w+=,.@-]+(/[\\w+=/,.@-]+)*",
                        "type": "string"
                    },
                    "Csr": {
                        "description": "<p>The certificate signing request (CSR) for the certificate you want to issue. You can use the following OpenSSL command to create the CSR and a 2048 bit RSA private key. </p> <p> <code>openssl req -new -newkey rsa:2048 -days 365 -keyout private/test_cert_priv_key.pem -out csr/test_cert_.csr</code> </p> <p>If you have a configuration file, you can use the following OpenSSL command. The <code>usr_cert</code> block in the configuration file contains your X509 version 3 extensions. </p> <p> <code>openssl req -new -config openssl_rsa.cnf -extensions usr_cert -newkey rsa:2048 -days -365 -keyout private/test_cert_priv_key.pem -out csr/test_cert_.csr</code> </p>",
                        "maxLength": 32768,
                        "minLength": 1,
                        "type": "string"
                    },
                    "IdempotencyToken": {
                        "description": "Custom string that can be used to distinguish between calls to the <b>IssueCertificate</b> operation. Idempotency tokens time out after one hour. Therefore, if you call <b>IssueCertificate</b> multiple times with the same idempotency token within 5 minutes, ACM PCA recognizes that you are requesting only one certificate and will issue only one. If you change the idempotency token for each call, PCA recognizes that you are requesting multiple certificates.",
                        "maxLength": 36,
                        "minLength": 1,
                        "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u00FF]*",
                        "type": "string"
                    },
                    "SigningAlgorithm": {
                        "description": "The name of the algorithm that will be used to sign the certificate to be issued.",
                        "enum": [
                            "SHA256WITHECDSA",
                            "SHA384WITHECDSA",
                            "SHA512WITHECDSA",
                            "SHA256WITHRSA",
                            "SHA384WITHRSA",
                            "SHA512WITHRSA"
                        ],
                        "type": "string"
                    },
                    "Validity": {
                        "description": "The type of the validity period.",
                        "properties": {
                            "Type": {
                                "description": "Specifies whether the <code>Value</code> parameter represents days, months, or years.",
                                "enum": [
                                    "END_DATE",
                                    "ABSOLUTE",
                                    "DAYS",
                                    "MONTHS",
                                    "YEARS"
                                ],
                                "type": "string"
                            },
                            "Value": {
                                "description": "Time period.",
                                "minimum": 1,
                                "type": "integer"
                            }
                        },
                        "required": [
                            "Value",
                            "Type"
                        ],
                        "type": "object"
                    }
                },
                "required": [
                    "CertificateAuthorityArn",
                    "Csr",
                    "SigningAlgorithm",
                    "Validity"
                ],
                "type": "object"
            },
            "IssueCertificateResponse": {
                "properties": {
                    "CertificateArn": {
                        "description": "<p>The Amazon Resource Name (ARN) of the issued certificate and the certificate serial number. This is of the form:</p> <p> <code>arn:aws:acm-pca:<i>region</i>:<i>account</i>:certificate-authority/<i>12345678-1234-1234-1234-123456789012</i>/certificate/<i>286535153982981100925020015808220737245</i> </code> </p>",
                        "maxLength": 200,
                        "minLength": 5,
                        "pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:[\\w+=/,.@-]*:[0-9]+:[\\w+=,.@-]+(/[\\w+=/,.@-]+)*",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "KeyAlgorithm": {
                "enum": [
                    "RSA_2048",
                    "RSA_4096",
                    "EC_prime256v1",
                    "EC_secp384r1"
                ],
                "type": "string"
            },
            "LimitExceededException": {},
            "ListCertificateAuthoritiesRequest": {
                "properties": {
                    "MaxResults": {
                        "description": "Use this parameter when paginating results to specify the maximum number of items to return in the response on each page. If additional items exist beyond the number you specify, the <code>NextToken</code> element is sent in the response. Use this <code>NextToken</code> value in a subsequent request to retrieve additional items.",
                        "maximum": 1000,
                        "minimum": 1,
                        "type": "integer"
                    },
                    "NextToken": {
                        "description": "Use this parameter when paginating results in a subsequent request after you receive a response with truncated results. Set it to the value of the <code>NextToken</code> parameter from the response you just received.",
                        "maxLength": 500,
                        "minLength": 1,
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ListCertificateAuthoritiesResponse": {
                "properties": {
                    "CertificateAuthorities": {
                        "description": "Summary information about each certificate authority you have created.",
                        "items": {
                            "description": "Contains information about your private certificate authority (CA). Your private CA can issue and revoke X.509 digital certificates. Digital certificates verify that the entity named in the certificate <b>Subject</b> field owns or controls the public key contained in the <b>Subject Public Key Info</b> field. Call the <a>CreateCertificateAuthority</a> operation to create your private CA. You must then call the <a>GetCertificateAuthorityCertificate</a> operation to retrieve a private CA certificate signing request (CSR). Take the CSR to your on-premises CA and sign it with the root CA certificate or a subordinate certificate. Call the <a>ImportCertificateAuthorityCertificate</a> operation to import the signed certificate into AWS Certificate Manager (ACM). ",
                            "properties": {
                                "Arn": {
                                    "description": "Amazon Resource Name (ARN) for your private certificate authority (CA). The format is <code> <i>12345678-1234-1234-1234-123456789012</i> </code>.",
                                    "maxLength": 200,
                                    "minLength": 5,
                                    "pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:[\\w+=/,.@-]*:[0-9]+:[\\w+=,.@-]+(/[\\w+=/,.@-]+)*",
                                    "type": "string"
                                },
                                "CertificateAuthorityConfiguration": {
                                    "description": "Your private CA configuration.",
                                    "properties": {
                                        "KeyAlgorithm": {
                                            "description": "Type of the public key algorithm and size, in bits, of the key pair that your key pair creates when it issues a certificate.",
                                            "enum": [
                                                "RSA_2048",
                                                "RSA_4096",
                                                "EC_prime256v1",
                                                "EC_secp384r1"
                                            ],
                                            "type": "string"
                                        },
                                        "SigningAlgorithm": {
                                            "description": "Name of the algorithm your private CA uses to sign certificate requests.",
                                            "enum": [
                                                "SHA256WITHECDSA",
                                                "SHA384WITHECDSA",
                                                "SHA512WITHECDSA",
                                                "SHA256WITHRSA",
                                                "SHA384WITHRSA",
                                                "SHA512WITHRSA"
                                            ],
                                            "type": "string"
                                        },
                                        "Subject": {
                                            "description": "Structure that contains X.500 distinguished name information for your private CA.",
                                            "properties": {
                                                "CommonName": {
                                                    "description": "Fully qualified domain name (FQDN) associated with the certificate subject.",
                                                    "maxLength": 64,
                                                    "minLength": 0,
                                                    "type": "string"
                                                },
                                                "Country": {
                                                    "description": "Two-digit code that specifies the country in which the certificate subject located.",
                                                    "pattern": "[A-Za-z]{2}",
                                                    "type": "string"
                                                },
                                                "DistinguishedNameQualifier": {
                                                    "description": "Disambiguating information for the certificate subject.",
                                                    "maxLength": 64,
                                                    "minLength": 0,
                                                    "pattern": "[a-zA-Z0-9'()+-.?:/= ]*",
                                                    "type": "string"
                                                },
                                                "GenerationQualifier": {
                                                    "description": "Typically a qualifier appended to the name of an individual. Examples include Jr. for junior, Sr. for senior, and III for third.",
                                                    "maxLength": 3,
                                                    "minLength": 0,
                                                    "type": "string"
                                                },
                                                "GivenName": {
                                                    "description": "First name.",
                                                    "maxLength": 16,
                                                    "minLength": 0,
                                                    "type": "string"
                                                },
                                                "Initials": {
                                                    "description": "Concatenation that typically contains the first letter of the <b>GivenName</b>, the first letter of the middle name if one exists, and the first letter of the <b>SurName</b>.",
                                                    "maxLength": 5,
                                                    "minLength": 0,
                                                    "type": "string"
                                                },
                                                "Locality": {
                                                    "description": "The locality (such as a city or town) in which the certificate subject is located.",
                                                    "maxLength": 128,
                                                    "minLength": 0,
                                                    "type": "string"
                                                },
                                                "Organization": {
                                                    "description": "Legal name of the organization with which the certificate subject is affiliated. ",
                                                    "maxLength": 64,
                                                    "minLength": 0,
                                                    "type": "string"
                                                },
                                                "OrganizationalUnit": {
                                                    "description": "A subdivision or unit of the organization (such as sales or finance) with which the certificate subject is affiliated.",
                                                    "maxLength": 64,
                                                    "minLength": 0,
                                                    "type": "string"
                                                },
                                                "Pseudonym": {
                                                    "description": "Typically a shortened version of a longer <b>GivenName</b>. For example, Jonathan is often shortened to John. Elizabeth is often shortened to Beth, Liz, or Eliza.",
                                                    "maxLength": 128,
                                                    "minLength": 0,
                                                    "type": "string"
                                                },
                                                "SerialNumber": {
                                                    "description": "The certificate serial number.",
                                                    "maxLength": 64,
                                                    "minLength": 0,
                                                    "type": "string"
                                                },
                                                "State": {
                                                    "description": "State in which the subject of the certificate is located.",
                                                    "maxLength": 128,
                                                    "minLength": 0,
                                                    "type": "string"
                                                },
                                                "Surname": {
                                                    "description": "Family name. In the US and the UK, for example, the surname of an individual is ordered last. In Asian cultures the surname is typically ordered first.",
                                                    "maxLength": 40,
                                                    "minLength": 0,
                                                    "type": "string"
                                                },
                                                "Title": {
                                                    "description": "A title such as Mr. or Ms., which is pre-pended to the name to refer formally to the certificate subject.",
                                                    "maxLength": 64,
                                                    "minLength": 0,
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "required": [
                                        "KeyAlgorithm",
                                        "SigningAlgorithm",
                                        "Subject"
                                    ],
                                    "type": "object"
                                },
                                "CreatedAt": {
                                    "description": "Date and time at which your private CA was created.",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "FailureReason": {
                                    "description": "Reason the request to create your private CA failed.",
                                    "enum": [
                                        "REQUEST_TIMED_OUT",
                                        "UNSUPPORTED_ALGORITHM",
                                        "OTHER"
                                    ],
                                    "type": "string"
                                },
                                "LastStateChangeAt": {
                                    "description": "Date and time at which your private CA was last updated.",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "NotAfter": {
                                    "description": "Date and time after which your private CA certificate is not valid.",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "NotBefore": {
                                    "description": "Date and time before which your private CA certificate is not valid.",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "RestorableUntil": {
                                    "description": "The period during which a deleted CA can be restored. For more information, see the <code>PermanentDeletionTimeInDays</code> parameter of the <a>DeleteCertificateAuthorityRequest</a> operation. ",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "RevocationConfiguration": {
                                    "description": "Information about the certificate revocation list (CRL) created and maintained by your private CA. ",
                                    "properties": {
                                        "CrlConfiguration": {
                                            "description": "Configuration of the certificate revocation list (CRL), if any, maintained by your private CA.",
                                            "properties": {
                                                "CustomCname": {
                                                    "description": "Name inserted into the certificate <b>CRL Distribution Points</b> extension that enables the use of an alias for the CRL distribution point. Use this value if you don't want the name of your S3 bucket to be public.",
                                                    "maxLength": 253,
                                                    "minLength": 0,
                                                    "type": "string"
                                                },
                                                "Enabled": {
                                                    "description": "Boolean value that specifies whether certificate revocation lists (CRLs) are enabled. You can use this value to enable certificate revocation for a new CA when you call the <a>CreateCertificateAuthority</a> operation or for an existing CA when you call the <a>UpdateCertificateAuthority</a> operation. ",
                                                    "type": "boolean"
                                                },
                                                "ExpirationInDays": {
                                                    "description": "Number of days until a certificate expires.",
                                                    "maximum": 5000,
                                                    "minimum": 1,
                                                    "type": "integer"
                                                },
                                                "S3BucketName": {
                                                    "description": "Name of the S3 bucket that contains the CRL. If you do not provide a value for the <b>CustomCname</b> argument, the name of your S3 bucket is placed into the <b>CRL Distribution Points</b> extension of the issued certificate. You can change the name of your bucket by calling the <a>UpdateCertificateAuthority</a> operation. You must specify a bucket policy that allows ACM PCA to write the CRL to your bucket.",
                                                    "maxLength": 255,
                                                    "minLength": 3,
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "Enabled"
                                            ],
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                },
                                "Serial": {
                                    "description": "Serial number of your private CA.",
                                    "type": "string"
                                },
                                "Status": {
                                    "description": "Status of your private CA.",
                                    "enum": [
                                        "CREATING",
                                        "PENDING_CERTIFICATE",
                                        "ACTIVE",
                                        "DELETED",
                                        "DISABLED",
                                        "EXPIRED",
                                        "FAILED"
                                    ],
                                    "type": "string"
                                },
                                "Type": {
                                    "description": "Type of your private CA.",
                                    "enum": [
                                        "SUBORDINATE"
                                    ],
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "NextToken": {
                        "description": "When the list is truncated, this value is present and should be used for the <code>NextToken</code> parameter in a subsequent pagination request.",
                        "maxLength": 500,
                        "minLength": 1,
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ListTagsRequest": {
                "properties": {
                    "CertificateAuthorityArn": {
                        "description": "<p>The Amazon Resource Name (ARN) that was returned when you called the <a>CreateCertificateAuthority</a> operation. This must be of the form: </p> <p> <code>arn:aws:acm-pca:<i>region</i>:<i>account</i>:certificate-authority/<i>12345678-1234-1234-1234-123456789012</i> </code> </p>",
                        "maxLength": 200,
                        "minLength": 5,
                        "pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:[\\w+=/,.@-]*:[0-9]+:[\\w+=,.@-]+(/[\\w+=/,.@-]+)*",
                        "type": "string"
                    },
                    "MaxResults": {
                        "description": "Use this parameter when paginating results to specify the maximum number of items to return in the response. If additional items exist beyond the number you specify, the <b>NextToken</b> element is sent in the response. Use this <b>NextToken</b> value in a subsequent request to retrieve additional items.",
                        "maximum": 1000,
                        "minimum": 1,
                        "type": "integer"
                    },
                    "NextToken": {
                        "description": "Use this parameter when paginating results in a subsequent request after you receive a response with truncated results. Set it to the value of <b>NextToken</b> from the response you just received.",
                        "maxLength": 500,
                        "minLength": 1,
                        "type": "string"
                    }
                },
                "required": [
                    "CertificateAuthorityArn"
                ],
                "type": "object"
            },
            "ListTagsResponse": {
                "properties": {
                    "NextToken": {
                        "description": "When the list is truncated, this value is present and should be used for the <b>NextToken</b> parameter in a subsequent pagination request. ",
                        "maxLength": 500,
                        "minLength": 1,
                        "type": "string"
                    },
                    "Tags": {
                        "description": "The tags associated with your private CA.",
                        "items": {
                            "description": "Tags are labels that you can use to identify and organize your private CAs. Each tag consists of a key and an optional value. You can associate up to 50 tags with a private CA. To add one or more tags to a private CA, call the <a>TagCertificateAuthority</a> operation. To remove a tag, call the <a>UntagCertificateAuthority</a> operation. ",
                            "properties": {
                                "Key": {
                                    "description": "Key (name) of the tag.",
                                    "maxLength": 128,
                                    "minLength": 1,
                                    "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                                    "type": "string"
                                },
                                "Value": {
                                    "description": "Value of the tag.",
                                    "maxLength": 256,
                                    "minLength": 0,
                                    "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "Key"
                            ],
                            "type": "object"
                        },
                        "maxItems": 50,
                        "minItems": 1,
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "MalformedCSRException": {},
            "MalformedCertificateException": {},
            "MaxResults": {
                "maximum": 1000,
                "minimum": 1,
                "type": "integer"
            },
            "NextToken": {
                "maxLength": 500,
                "minLength": 1,
                "type": "string"
            },
            "PermanentDeletionTimeInDays": {
                "maximum": 30,
                "minimum": 7,
                "type": "integer"
            },
            "PositiveLong": {
                "minimum": 1,
                "type": "integer"
            },
            "RequestAlreadyProcessedException": {},
            "RequestFailedException": {},
            "RequestInProgressException": {},
            "ResourceNotFoundException": {},
            "RestoreCertificateAuthorityRequest": {
                "properties": {
                    "CertificateAuthorityArn": {
                        "description": "<p>The Amazon Resource Name (ARN) that was returned when you called the <a>CreateCertificateAuthority</a> operation. This must be of the form: </p> <p> <code>arn:aws:acm-pca:<i>region</i>:<i>account</i>:certificate-authority/<i>12345678-1234-1234-1234-123456789012</i> </code> </p>",
                        "maxLength": 200,
                        "minLength": 5,
                        "pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:[\\w+=/,.@-]*:[0-9]+:[\\w+=,.@-]+(/[\\w+=/,.@-]+)*",
                        "type": "string"
                    }
                },
                "required": [
                    "CertificateAuthorityArn"
                ],
                "type": "object"
            },
            "RevocationConfiguration": {
                "description": "Certificate revocation information used by the <a>CreateCertificateAuthority</a> and <a>UpdateCertificateAuthority</a> operations. Your private certificate authority (CA) can create and maintain a certificate revocation list (CRL). A CRL contains information about certificates revoked by your CA. For more information, see <a>RevokeCertificate</a>.",
                "properties": {
                    "CrlConfiguration": {
                        "description": "Configuration of the certificate revocation list (CRL), if any, maintained by your private CA.",
                        "properties": {
                            "CustomCname": {
                                "description": "Name inserted into the certificate <b>CRL Distribution Points</b> extension that enables the use of an alias for the CRL distribution point. Use this value if you don't want the name of your S3 bucket to be public.",
                                "maxLength": 253,
                                "minLength": 0,
                                "type": "string"
                            },
                            "Enabled": {
                                "description": "Boolean value that specifies whether certificate revocation lists (CRLs) are enabled. You can use this value to enable certificate revocation for a new CA when you call the <a>CreateCertificateAuthority</a> operation or for an existing CA when you call the <a>UpdateCertificateAuthority</a> operation. ",
                                "type": "boolean"
                            },
                            "ExpirationInDays": {
                                "description": "Number of days until a certificate expires.",
                                "maximum": 5000,
                                "minimum": 1,
                                "type": "integer"
                            },
                            "S3BucketName": {
                                "description": "Name of the S3 bucket that contains the CRL. If you do not provide a value for the <b>CustomCname</b> argument, the name of your S3 bucket is placed into the <b>CRL Distribution Points</b> extension of the issued certificate. You can change the name of your bucket by calling the <a>UpdateCertificateAuthority</a> operation. You must specify a bucket policy that allows ACM PCA to write the CRL to your bucket.",
                                "maxLength": 255,
                                "minLength": 3,
                                "type": "string"
                            }
                        },
                        "required": [
                            "Enabled"
                        ],
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "RevocationReason": {
                "enum": [
                    "UNSPECIFIED",
                    "KEY_COMPROMISE",
                    "CERTIFICATE_AUTHORITY_COMPROMISE",
                    "AFFILIATION_CHANGED",
                    "SUPERSEDED",
                    "CESSATION_OF_OPERATION",
                    "PRIVILEGE_WITHDRAWN",
                    "A_A_COMPROMISE"
                ],
                "type": "string"
            },
            "RevokeCertificateRequest": {
                "properties": {
                    "CertificateAuthorityArn": {
                        "description": "<p>Amazon Resource Name (ARN) of the private CA that issued the certificate to be revoked. This must be of the form:</p> <p> <code>arn:aws:acm-pca:<i>region</i>:<i>account</i>:certificate-authority/<i>12345678-1234-1234-1234-123456789012</i> </code> </p>",
                        "maxLength": 200,
                        "minLength": 5,
                        "pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:[\\w+=/,.@-]*:[0-9]+:[\\w+=,.@-]+(/[\\w+=/,.@-]+)*",
                        "type": "string"
                    },
                    "CertificateSerial": {
                        "description": "<p>Serial number of the certificate to be revoked. This must be in hexadecimal format. You can retrieve the serial number by calling <a>GetCertificate</a> with the Amazon Resource Name (ARN) of the certificate you want and the ARN of your private CA. The <b>GetCertificate</b> operation retrieves the certificate in the PEM format. You can use the following OpenSSL command to list the certificate in text format and copy the hexadecimal serial number. </p> <p> <code>openssl x509 -in <i>file_path</i> -text -noout</code> </p> <p>You can also copy the serial number from the console or use the <a href=\"https://docs.aws.amazon.com/acm/latest/APIReference/API_DescribeCertificate.html\">DescribeCertificate</a> operation in the <i>AWS Certificate Manager API Reference</i>. </p>",
                        "maxLength": 128,
                        "minLength": 0,
                        "type": "string"
                    },
                    "RevocationReason": {
                        "description": "Specifies why you revoked the certificate.",
                        "enum": [
                            "UNSPECIFIED",
                            "KEY_COMPROMISE",
                            "CERTIFICATE_AUTHORITY_COMPROMISE",
                            "AFFILIATION_CHANGED",
                            "SUPERSEDED",
                            "CESSATION_OF_OPERATION",
                            "PRIVILEGE_WITHDRAWN",
                            "A_A_COMPROMISE"
                        ],
                        "type": "string"
                    }
                },
                "required": [
                    "CertificateAuthorityArn",
                    "CertificateSerial",
                    "RevocationReason"
                ],
                "type": "object"
            },
            "SigningAlgorithm": {
                "enum": [
                    "SHA256WITHECDSA",
                    "SHA384WITHECDSA",
                    "SHA512WITHECDSA",
                    "SHA256WITHRSA",
                    "SHA384WITHRSA",
                    "SHA512WITHRSA"
                ],
                "type": "string"
            },
            "String": {
                "type": "string"
            },
            "String128": {
                "maxLength": 128,
                "minLength": 0,
                "type": "string"
            },
            "String16": {
                "maxLength": 16,
                "minLength": 0,
                "type": "string"
            },
            "String253": {
                "maxLength": 253,
                "minLength": 0,
                "type": "string"
            },
            "String3": {
                "maxLength": 3,
                "minLength": 0,
                "type": "string"
            },
            "String3To255": {
                "maxLength": 255,
                "minLength": 3,
                "type": "string"
            },
            "String40": {
                "maxLength": 40,
                "minLength": 0,
                "type": "string"
            },
            "String5": {
                "maxLength": 5,
                "minLength": 0,
                "type": "string"
            },
            "String64": {
                "maxLength": 64,
                "minLength": 0,
                "type": "string"
            },
            "TStamp": {
                "format": "date-time",
                "type": "string"
            },
            "Tag": {
                "description": "Tags are labels that you can use to identify and organize your private CAs. Each tag consists of a key and an optional value. You can associate up to 50 tags with a private CA. To add one or more tags to a private CA, call the <a>TagCertificateAuthority</a> operation. To remove a tag, call the <a>UntagCertificateAuthority</a> operation. ",
                "properties": {
                    "Key": {
                        "description": "Key (name) of the tag.",
                        "maxLength": 128,
                        "minLength": 1,
                        "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                        "type": "string"
                    },
                    "Value": {
                        "description": "Value of the tag.",
                        "maxLength": 256,
                        "minLength": 0,
                        "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                        "type": "string"
                    }
                },
                "required": [
                    "Key"
                ],
                "type": "object"
            },
            "TagCertificateAuthorityRequest": {
                "properties": {
                    "CertificateAuthorityArn": {
                        "description": "<p>The Amazon Resource Name (ARN) that was returned when you called <a>CreateCertificateAuthority</a>. This must be of the form: </p> <p> <code>arn:aws:acm-pca:<i>region</i>:<i>account</i>:certificate-authority/<i>12345678-1234-1234-1234-123456789012</i> </code> </p>",
                        "maxLength": 200,
                        "minLength": 5,
                        "pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:[\\w+=/,.@-]*:[0-9]+:[\\w+=,.@-]+(/[\\w+=/,.@-]+)*",
                        "type": "string"
                    },
                    "Tags": {
                        "description": "List of tags to be associated with the CA.",
                        "items": {
                            "description": "Tags are labels that you can use to identify and organize your private CAs. Each tag consists of a key and an optional value. You can associate up to 50 tags with a private CA. To add one or more tags to a private CA, call the <a>TagCertificateAuthority</a> operation. To remove a tag, call the <a>UntagCertificateAuthority</a> operation. ",
                            "properties": {
                                "Key": {
                                    "description": "Key (name) of the tag.",
                                    "maxLength": 128,
                                    "minLength": 1,
                                    "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                                    "type": "string"
                                },
                                "Value": {
                                    "description": "Value of the tag.",
                                    "maxLength": 256,
                                    "minLength": 0,
                                    "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "Key"
                            ],
                            "type": "object"
                        },
                        "maxItems": 50,
                        "minItems": 1,
                        "type": "array"
                    }
                },
                "required": [
                    "CertificateAuthorityArn",
                    "Tags"
                ],
                "type": "object"
            },
            "TagKey": {
                "maxLength": 128,
                "minLength": 1,
                "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                "type": "string"
            },
            "TagList": {
                "items": {
                    "description": "Tags are labels that you can use to identify and organize your private CAs. Each tag consists of a key and an optional value. You can associate up to 50 tags with a private CA. To add one or more tags to a private CA, call the <a>TagCertificateAuthority</a> operation. To remove a tag, call the <a>UntagCertificateAuthority</a> operation. ",
                    "properties": {
                        "Key": {
                            "description": "Key (name) of the tag.",
                            "maxLength": 128,
                            "minLength": 1,
                            "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                            "type": "string"
                        },
                        "Value": {
                            "description": "Value of the tag.",
                            "maxLength": 256,
                            "minLength": 0,
                            "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                            "type": "string"
                        }
                    },
                    "required": [
                        "Key"
                    ],
                    "type": "object"
                },
                "maxItems": 50,
                "minItems": 1,
                "type": "array"
            },
            "TagValue": {
                "maxLength": 256,
                "minLength": 0,
                "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                "type": "string"
            },
            "TooManyTagsException": {},
            "UntagCertificateAuthorityRequest": {
                "properties": {
                    "CertificateAuthorityArn": {
                        "description": "<p>The Amazon Resource Name (ARN) that was returned when you called <a>CreateCertificateAuthority</a>. This must be of the form: </p> <p> <code>arn:aws:acm-pca:<i>region</i>:<i>account</i>:certificate-authority/<i>12345678-1234-1234-1234-123456789012</i> </code> </p>",
                        "maxLength": 200,
                        "minLength": 5,
                        "pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:[\\w+=/,.@-]*:[0-9]+:[\\w+=,.@-]+(/[\\w+=/,.@-]+)*",
                        "type": "string"
                    },
                    "Tags": {
                        "description": "List of tags to be removed from the CA.",
                        "items": {
                            "description": "Tags are labels that you can use to identify and organize your private CAs. Each tag consists of a key and an optional value. You can associate up to 50 tags with a private CA. To add one or more tags to a private CA, call the <a>TagCertificateAuthority</a> operation. To remove a tag, call the <a>UntagCertificateAuthority</a> operation. ",
                            "properties": {
                                "Key": {
                                    "description": "Key (name) of the tag.",
                                    "maxLength": 128,
                                    "minLength": 1,
                                    "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                                    "type": "string"
                                },
                                "Value": {
                                    "description": "Value of the tag.",
                                    "maxLength": 256,
                                    "minLength": 0,
                                    "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "Key"
                            ],
                            "type": "object"
                        },
                        "maxItems": 50,
                        "minItems": 1,
                        "type": "array"
                    }
                },
                "required": [
                    "CertificateAuthorityArn",
                    "Tags"
                ],
                "type": "object"
            },
            "UpdateCertificateAuthorityRequest": {
                "properties": {
                    "CertificateAuthorityArn": {
                        "description": "<p>Amazon Resource Name (ARN) of the private CA that issued the certificate to be revoked. This must be of the form:</p> <p> <code>arn:aws:acm-pca:<i>region</i>:<i>account</i>:certificate-authority/<i>12345678-1234-1234-1234-123456789012</i> </code> </p>",
                        "maxLength": 200,
                        "minLength": 5,
                        "pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:[\\w+=/,.@-]*:[0-9]+:[\\w+=,.@-]+(/[\\w+=/,.@-]+)*",
                        "type": "string"
                    },
                    "RevocationConfiguration": {
                        "description": "Revocation information for your private CA.",
                        "properties": {
                            "CrlConfiguration": {
                                "description": "Configuration of the certificate revocation list (CRL), if any, maintained by your private CA.",
                                "properties": {
                                    "CustomCname": {
                                        "description": "Name inserted into the certificate <b>CRL Distribution Points</b> extension that enables the use of an alias for the CRL distribution point. Use this value if you don't want the name of your S3 bucket to be public.",
                                        "maxLength": 253,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "Enabled": {
                                        "description": "Boolean value that specifies whether certificate revocation lists (CRLs) are enabled. You can use this value to enable certificate revocation for a new CA when you call the <a>CreateCertificateAuthority</a> operation or for an existing CA when you call the <a>UpdateCertificateAuthority</a> operation. ",
                                        "type": "boolean"
                                    },
                                    "ExpirationInDays": {
                                        "description": "Number of days until a certificate expires.",
                                        "maximum": 5000,
                                        "minimum": 1,
                                        "type": "integer"
                                    },
                                    "S3BucketName": {
                                        "description": "Name of the S3 bucket that contains the CRL. If you do not provide a value for the <b>CustomCname</b> argument, the name of your S3 bucket is placed into the <b>CRL Distribution Points</b> extension of the issued certificate. You can change the name of your bucket by calling the <a>UpdateCertificateAuthority</a> operation. You must specify a bucket policy that allows ACM PCA to write the CRL to your bucket.",
                                        "maxLength": 255,
                                        "minLength": 3,
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "Enabled"
                                ],
                                "type": "object"
                            }
                        },
                        "type": "object"
                    },
                    "Status": {
                        "description": "Status of your private CA.",
                        "enum": [
                            "CREATING",
                            "PENDING_CERTIFICATE",
                            "ACTIVE",
                            "DELETED",
                            "DISABLED",
                            "EXPIRED",
                            "FAILED"
                        ],
                        "type": "string"
                    }
                },
                "required": [
                    "CertificateAuthorityArn"
                ],
                "type": "object"
            },
            "Validity": {
                "description": "Length of time for which the certificate issued by your private certificate authority (CA), or by the private CA itself, is valid in days, months, or years. You can issue a certificate by calling the <a>IssueCertificate</a> operation.",
                "properties": {
                    "Type": {
                        "description": "Specifies whether the <code>Value</code> parameter represents days, months, or years.",
                        "enum": [
                            "END_DATE",
                            "ABSOLUTE",
                            "DAYS",
                            "MONTHS",
                            "YEARS"
                        ],
                        "type": "string"
                    },
                    "Value": {
                        "description": "Time period.",
                        "minimum": 1,
                        "type": "integer"
                    }
                },
                "required": [
                    "Value",
                    "Type"
                ],
                "type": "object"
            },
            "ValidityPeriodType": {
                "enum": [
                    "END_DATE",
                    "ABSOLUTE",
                    "DAYS",
                    "MONTHS",
                    "YEARS"
                ],
                "type": "string"
            }
        },
        "parameters": {
            "Action": {
                "in": "query",
                "name": "Action",
                "required": true,
                "schema": {
                    "type": "string"
                }
            },
            "Version": {
                "in": "query",
                "name": "Version",
                "required": true,
                "schema": {
                    "type": "string"
                }
            },
            "X-Amz-Algorithm": {
                "in": "header",
                "name": "X-Amz-Algorithm",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "X-Amz-Content-Sha256": {
                "in": "header",
                "name": "X-Amz-Content-Sha256",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "X-Amz-Credential": {
                "in": "header",
                "name": "X-Amz-Credential",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "X-Amz-Date": {
                "in": "header",
                "name": "X-Amz-Date",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "X-Amz-Security-Token": {
                "in": "header",
                "name": "X-Amz-Security-Token",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "X-Amz-Signature": {
                "in": "header",
                "name": "X-Amz-Signature",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "X-Amz-SignedHeaders": {
                "in": "header",
                "name": "X-Amz-SignedHeaders",
                "required": false,
                "schema": {
                    "type": "string"
                }
            }
        },
        "requestBodies": {
            "GetCertificateAuthorityCsrBody": {
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "CertificateAuthorityArn": {
                                    "description": "<p>The Amazon Resource Name (ARN) that was returned when you called the <a>CreateCertificateAuthority</a> operation. This must be of the form: </p> <p> <code>arn:aws:acm-pca:<i>region</i>:<i>account</i>:certificate-authority/<i>12345678-1234-1234-1234-123456789012</i> </code> </p>",
                                    "maxLength": 200,
                                    "minLength": 5,
                                    "pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:[\\w+=/,.@-]*:[0-9]+:[\\w+=,.@-]+(/[\\w+=/,.@-]+)*",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "CertificateAuthorityArn"
                            ],
                            "type": "object"
                        }
                    }
                },
                "required": true
            }
        },
        "securitySchemes": {
            "hmac": {
                "description": "Amazon Signature authorization v4",
                "in": "header",
                "name": "Authorization",
                "type": "apiKey",
                "x-amazon-apigateway-authtype": "awsSigv4"
            }
        }
    }
}