{
    "name": "amazonaws-com-acm-pca-connector",
    "version": "2017.0.0",
    "description": "You can use the ACM PCA API to create a private certificate authority (CA). You\nmust first call the CreateCertificateAuthority operation. If successful, the\noperation returns an Amazon Resource Name (ARN) for your private CA. Use this\nARN as input to the GetCertificateAuthorityCsr operation to retrieve the\ncertificate signing request (CSR) for your private CA certificate. Sign the CSR\nusing the root or an intermediate CA in your on-premises PKI hierarchy, and call\nthe ImportCertificateAuthorityCertificate to import your signed private CA\ncertificate into ACM PCA. \n\nUse your private CA to issue and revoke certificates. These are private\ncertificates that identify and secure client computers, servers, applications,\nservices, devices, and users over SSLS/TLS connections within your organization.\nCall the IssueCertificate operation to issue a certificate. Call the \nRevokeCertificate operation to revoke a certificate. \n\nCertificates issued by your private CA can be trusted only within your\norganization, not publicly.\n\nYour private CA can optionally create a certificate revocation list (CRL) to\ntrack the certificates you revoke. To create a CRL, you must specify a \nRevocationConfiguration object when you call the CreateCertificateAuthority \noperation. ACM PCA writes the CRL to an S3 bucket that you specify. You must\nspecify a bucket policy that grants ACM PCA write permission. \n\nYou can also call the CreateCertificateAuthorityAuditReport to create an\noptional audit report, which enumerates all of the issued, valid, expired, and\nrevoked certificates from the CA.\n\nEach ACM PCA API operation has a throttling limit which determines the number of\ntimes the operation can be called per second. For more information, see API Rate\nLimits in ACM PCA [acm-pca/latest/userguide/PcaLimits.html#PcaLimits-api] in the\nACM PCA user guide.",
    "main": "component.json",
    "dependencies": {
        "elasticio-node": "0.0.9",
        "elasticio-sailor-nodejs": "^2.2.1",
        "swagger-client": "^3.8.22"
    },
    "author": {
        "name": "Deutsche Telekom AG"
    },
    "license": "Apache-2.0"
}